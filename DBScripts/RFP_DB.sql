-- MySQL Administrator dump 1.4
--
-- ------------------------------------------------------
-- Server version	5.1.33-community


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;


--
-- Create schema rfp
--

CREATE DATABASE IF NOT EXISTS rfp;
USE rfp;

--
-- Definition of table `customer`
--

DROP TABLE IF EXISTS `customer`;
CREATE TABLE `customer` (
  `CUSTOMERID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CUSTOMERCODE` varchar(20) NOT NULL,
  `CUSTOMERNAME` varchar(150) NOT NULL,
  `ADDRESS` varchar(500) NOT NULL,
  `EMAIL` varchar(255) NOT NULL,
  `CONTACTPERSON` varchar(100) NOT NULL,
  `CONTACTNO` varchar(20) NOT NULL,
  `CASHACCOUNTID` varchar(30) NOT NULL,
  `TOTALSPEND` decimal(18,2) NOT NULL DEFAULT '0.00',
  `ACTIVE` char(1) NOT NULL,
  `CREATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `CREATEDON` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `UPDATEDON` datetime NOT NULL DEFAULT '1800-01-01 00:00:00',
  PRIMARY KEY (`CUSTOMERID`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `customer`
--

/*!40000 ALTER TABLE `customer` DISABLE KEYS */;
INSERT INTO `customer` VALUES  (1,'REL','RELIANCE INDUSTRIES','MUMBAI','sanjay.kumar@reliance.com','SANJAY KUMAR','9967288729','','0.00','A',1,'2016-03-08 13:09:38',0,'1800-01-01 00:00:00'),
 (2,'MLL','MAHINDRA LOGISTICS LIMITED','MUMBAI','ajay.singh@mahindra.com','AJAY SINGH','7823287678','','0.00','A',1,'2016-03-08 13:09:38',0,'1800-01-01 00:00:00'),
 (3,'HP','HAWLETT-PACKARD','DELHI','williamredingtonhewlett@hp.co.in','WILLIAN REDINGTON HEWLETT','9876567676','','0.00','A',1,'2016-03-08 13:09:38',0,'1800-01-01 00:00:00'),
 (4,'MICROSOFT','MICROSOFT CORPORATION','WASHINGTON,UNITED STATE','satyanadella@microsoft.com','SATYA NADELLA','8023462156','','0.00','A',1,'2016-03-08 13:09:38',0,'1800-01-01 00:00:00'),
 (5,'UNI','UNISTANZ SOFTWARE PVT LTD','MUMBAI','jayendra.desai@unistanz.com','JAYENDRA DESAI','9987099865','','0.00','A',1,'2016-03-08 13:09:38',0,'1800-01-01 00:00:00'),
 (6,'PEP','PEPSI CO.','MUMBAI','praveen@pepsi.co.in','PRAVEEN RAJ','7299094095','','0.00','A',1,'2016-03-08 21:12:01',0,'1800-01-01 00:00:00'),
 (7,'COKE','COCA COLA','DELHI','raj@coca.co.in','RAJ KUMAR','9927497590','','0.00','A',1,'2016-03-08 21:13:12',0,'1800-01-01 00:00:00'),
 (8,'CTS','COGNIZANT TECHNOLOGY','CHENNAI','saravanan@cts.com','SARAVANAN R','9878674648','','0.00','A',1,'2016-03-08 21:15:25',0,'1800-01-01 00:00:00'),
 (9,'TCS','TATA CONSULTANCY SERVICES','HYDERABAD','murali@tcs.co.in','MURALI KONDA','9943968797','','0.00','A',1,'2016-03-08 21:16:11',0,'1800-01-01 00:00:00'),
 (10,'EDS','EDS TECHNOLOGY','BANGALORE','yuvaraj@eds.com','YOUVARAJ','9876797597','','0.00','A',1,'2016-03-08 21:17:15',0,'1800-01-01 00:00:00'),
 (11,'FLEX','FLEXTRONIX SERVICES','CHENNAI','arul@flex.com','ARUL R','9885984085','','0.00','A',1,'2016-03-08 21:18:14',0,'1800-01-01 00:00:00');
/*!40000 ALTER TABLE `customer` ENABLE KEYS */;


--
-- Definition of table `industrytype`
--

DROP TABLE IF EXISTS `industrytype`;
CREATE TABLE `industrytype` (
  `INDUSTRYTYPEID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `INDUSTRYTYPECODE` varchar(20) NOT NULL,
  `INDUSTRYTYPENAME` varchar(50) NOT NULL,
  `ACTIVE` char(1) NOT NULL,
  `CREATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `CREATEDON` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `UPDATEDON` datetime NOT NULL DEFAULT '1800-01-01 00:00:00',
  PRIMARY KEY (`INDUSTRYTYPEID`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `industrytype`
--

/*!40000 ALTER TABLE `industrytype` DISABLE KEYS */;
INSERT INTO `industrytype` VALUES  (1,'AGRI','AGRICULTURE & AGRIBUSNESS','A',1,'2016-03-08 13:30:31',0,'1800-01-01 00:00:00'),
 (2,'MANUFACTURING','MANUFACTURING','A',1,'2016-03-08 13:30:31',0,'1800-01-01 00:00:00'),
 (3,'IT','INFORMATION TECHNOLOGY','A',1,'2016-03-08 13:30:31',0,'1800-01-01 00:00:00'),
 (4,'INSURANCE','INSURANCE','A',1,'2016-03-08 13:30:31',0,'1800-01-01 00:00:00'),
 (5,'BANKING','BANKING','A',1,'2016-03-08 13:30:31',0,'1800-01-01 00:00:00'),
 (6,'LOGISTICS','LOGISTICS','A',1,'2016-03-08 13:30:31',0,'1800-01-01 00:00:00');
/*!40000 ALTER TABLE `industrytype` ENABLE KEYS */;


--
-- Definition of table `location`
--

DROP TABLE IF EXISTS `location`;
CREATE TABLE `location` (
  `LOCATIONID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `LOCATIONCODE` varchar(20) NOT NULL,
  `LOCATIONNAME` varchar(100) NOT NULL,
  `STATEID` int(10) unsigned NOT NULL,
  `ACTIVE` char(1) NOT NULL,
  `CREATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `CREATEDON` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `UPDATEDON` datetime NOT NULL DEFAULT '1800-01-01 00:00:00',
  PRIMARY KEY (`LOCATIONID`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `location`
--

/*!40000 ALTER TABLE `location` DISABLE KEYS */;
INSERT INTO `location` VALUES  (1,'BOM','MUMBAI',20,'A',1,'2016-03-08 13:39:59',0,'1800-01-01 00:00:00'),
 (2,'DEL','DELHI',10,'A',1,'2016-03-08 13:39:59',0,'1800-01-01 00:00:00'),
 (3,'BLR','BANGALURU',18,'A',1,'2016-03-08 13:39:59',0,'1800-01-01 00:00:00'),
 (4,'PAT','PATNA',7,'A',1,'2016-03-08 13:39:59',0,'1800-01-01 00:00:00'),
 (5,'VIZ','VISAKHAPATNAM',3,'A',1,'2016-03-08 13:39:59',0,'1800-01-01 00:00:00');
/*!40000 ALTER TABLE `location` ENABLE KEYS */;


--
-- Definition of table `packagetype`
--

DROP TABLE IF EXISTS `packagetype`;
CREATE TABLE `packagetype` (
  `PACKAGETYPEID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `PACKAGETYPECODE` varchar(20) NOT NULL,
  `PACKAGETYPENAME` varchar(50) NOT NULL,
  `ACTIVE` char(1) NOT NULL DEFAULT 'A',
  `CREATEDBY` int(10) unsigned NOT NULL,
  `CREATEDON` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `UPDATEDON` datetime NOT NULL DEFAULT '1800-01-01 00:00:00',
  PRIMARY KEY (`PACKAGETYPEID`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `packagetype`
--

/*!40000 ALTER TABLE `packagetype` DISABLE KEYS */;
INSERT INTO `packagetype` VALUES  (1,'PALT','PALLAT','A',1,'2016-03-10 09:07:33',0,'1800-01-01 00:00:00'),
 (2,'CBOX','CORRUGATED BOX','A',1,'2016-03-10 09:08:52',0,'1800-01-01 00:00:00'),
 (3,'GBAG','GUNNY BAG','A',1,'2016-03-10 09:08:52',0,'1800-01-01 00:00:00'),
 (4,'TROL','TROLLY','A',1,'2016-03-10 09:08:52',0,'1800-01-01 00:00:00'),
 (5,'LOOS','LOOSE','A',1,'2016-03-10 09:08:52',0,'1800-01-01 00:00:00');
/*!40000 ALTER TABLE `packagetype` ENABLE KEYS */;


--
-- Definition of table `rfpdetail`
--

DROP TABLE IF EXISTS `rfpdetail`;
CREATE TABLE `rfpdetail` (
  `RFPID` int(10) unsigned NOT NULL,
  `FROMLOCATION` int(10) NOT NULL,
  `FROMSTATEID` int(10) unsigned NOT NULL DEFAULT '0',
  `TOLOCATION` int(10) NOT NULL,
  `TOSTATEID` int(10) unsigned NOT NULL DEFAULT '0',
  `VEHICLETYPEID` int(10) NOT NULL,
  `SERVICETYPE` varchar(10) NOT NULL DEFAULT '',
  `ISROUNDTRIP` char(1) NOT NULL DEFAULT 'N',
  `RFPVOLUME` decimal(18,2) NOT NULL DEFAULT '0.00',
  `RFPDURATION` decimal(18,2) NOT NULL DEFAULT '0.00',
  `APPROVEDAMOUNT` decimal(18,2) NOT NULL DEFAULT '0.00',
  `LOADINGUNLOADINGTIME` decimal(7,2) NOT NULL DEFAULT '0.00',
  `DISTANCE` int(10) unsigned NOT NULL DEFAULT '0',
  `BACKHAUL` decimal(5,2) NOT NULL DEFAULT '0.00',
  `PACKAGETYPEID` int(10) unsigned NOT NULL DEFAULT '0',
  `PACKDIMENSION` varchar(50) NOT NULL,
  `STACKINGNORMS` varchar(100) NOT NULL,
  `CUSTTARGETRATE` decimal(18,2) NOT NULL,
  `ISLOADUNLOADCHARG` char(1) NOT NULL DEFAULT 'N',
  `AVERAGELOAD` varchar(50) NOT NULL,
  `FREQUENCY` varchar(50) NOT NULL,
  `MHEREQUIREMENT` varchar(100) NOT NULL,
  `OTHERREQUIREMENT` varchar(100) NOT NULL,
  `NOOFTRIPS` int(10) unsigned NOT NULL DEFAULT '0',
  `ACTIVE` char(1) NOT NULL,
  `CREATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `CREATEDON` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `UPDATEDON` datetime NOT NULL DEFAULT '1800-01-01 00:00:00',
  PRIMARY KEY (`RFPID`,`FROMLOCATION`,`TOLOCATION`,`VEHICLETYPEID`,`FROMSTATEID`,`TOSTATEID`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `rfpdetail`
--

/*!40000 ALTER TABLE `rfpdetail` DISABLE KEYS */;
INSERT INTO `rfpdetail` VALUES  (1,1,1,1,1,1,'EXP','N','5.00','5.00','5.00','5.00',5,'5.00',5,'NA','NA','1000.00','N','NA','NA','NA','N',3,'A',1,'2016-03-11 16:14:51',1,'2016-03-11 19:12:17'),
 (1,1,20,2,10,2,'EXP','N','0.00','0.00','700000.00','0.00',0,'0.00',1,'','','0.00','N','','','','',0,'A',1,'2016-03-08 13:56:57',0,'1800-01-01 00:00:00'),
 (1,1,20,2,10,4,'EXP','N','0.00','0.00','700000.00','10.00',100,'1.00',2,'','','0.00','N','','','','',0,'A',1,'2016-03-09 13:55:19',0,'1800-01-01 00:00:00'),
 (1,11,1,10,2,1,'EXP','N','5.00','5.00','5.00','5.00',5,'5.00',5,'NA','NA','100000.00','N','10','NA','NA','NA',3,'A',1,'2016-03-11 19:10:40',1,'2016-03-11 19:12:17'),
 (2,1,20,4,7,5,'EXP','N','0.00','0.00','500000.00','0.00',0,'0.00',3,'','','0.00','N','','','','',0,'A',1,'2016-03-08 13:56:57',0,'1800-01-01 00:00:00'),
 (3,2,10,4,7,4,'EXP','N','0.00','0.00','600000.00','0.00',0,'0.00',1,'','','0.00','N','','','','',0,'A',1,'2016-03-08 13:56:57',0,'1800-01-01 00:00:00'),
 (4,1,20,3,18,1,'EXP','N','0.00','0.00','400000.00','0.00',0,'0.00',2,'','','0.00','N','','','','',0,'A',1,'2016-03-08 13:56:57',0,'1800-01-01 00:00:00'),
 (5,3,18,5,3,3,'EXP','N','0.00','0.00','300000.00','0.00',0,'0.00',2,'','','0.00','N','','','','',0,'A',1,'2016-03-08 13:56:57',0,'1800-01-01 00:00:00'),
 (6,2,10,4,7,1,'ORD','N','0.00','0.00','800000.00','0.00',0,'0.00',3,'','','0.00','N','','','','',0,'A',1,'2016-03-08 13:56:57',0,'1800-01-01 00:00:00'),
 (7,3,18,1,20,4,'ORD','N','0.00','0.00','600000.00','0.00',0,'0.00',4,'','','0.00','N','','','','',0,'A',1,'2016-03-08 13:56:57',0,'1800-01-01 00:00:00'),
 (8,4,7,2,10,3,'ORD','N','0.00','0.00','600000.00','0.00',0,'0.00',4,'','','0.00','N','','','','',0,'A',1,'2016-03-08 13:56:57',0,'1800-01-01 00:00:00'),
 (9,5,3,3,18,1,'AIR','N','0.00','0.00','400000.00','0.00',0,'0.00',2,'','','0.00','N','','','','',0,'A',1,'2016-03-08 13:56:57',0,'1800-01-01 00:00:00'),
 (10,1,1,1,1,1,'EXP','N','5.00','5.00','5.00','5.00',5,'5.00',5,'NA','NA','100000.00','N','NA','NA','NA','NA',3,'A',1,'2016-03-10 21:21:00',0,'1800-01-01 00:00:00'),
 (10,3,18,5,3,4,'AIR','N','0.00','0.00','300000.00','0.00',0,'0.00',1,'','','0.00','N','','','','',0,'A',1,'2016-03-08 13:56:57',0,'1800-01-01 00:00:00'),
 (11,1,20,5,3,1,'ELX','N','10000.00','10.00','250000.00','0.00',0,'0.00',4,'NA',',','500000.00','','','5','','',20,'A',1,'2016-03-10 15:47:00',1,'2016-03-10 15:47:43'),
 (11,1,20,6,0,1,'ELX','N','10000.00','10.00','250000.00','0.00',0,'0.00',4,'NA',',','500000.00','','','5','','',20,'A',1,'2016-03-10 15:48:07',0,'1800-01-01 00:00:00');
/*!40000 ALTER TABLE `rfpdetail` ENABLE KEYS */;


--
-- Definition of table `rfpdetailtemp`
--

DROP TABLE IF EXISTS `rfpdetailtemp`;
CREATE TABLE `rfpdetailtemp` (
  `RFPID` int(10) unsigned NOT NULL,
  `FROMLOCATION` varchar(100) NOT NULL,
  `FROMSTATE` varchar(100) NOT NULL DEFAULT '0',
  `TOLOCATION` varchar(100) NOT NULL,
  `TOSTATE` varchar(100) NOT NULL DEFAULT '0',
  `VEHICLETYPE` varchar(50) NOT NULL,
  `SERVICETYPE` varchar(10) NOT NULL DEFAULT '',
  `ISROUNDTRIP` char(1) NOT NULL DEFAULT 'N',
  `RFPVOLUME` decimal(18,2) NOT NULL DEFAULT '0.00',
  `RFPDURATION` decimal(18,2) NOT NULL DEFAULT '0.00',
  `APPROVEDAMOUNT` decimal(18,2) NOT NULL DEFAULT '0.00',
  `LOADINGUNLOADINGTIME` decimal(7,2) NOT NULL DEFAULT '0.00',
  `DISTANCE` int(10) unsigned NOT NULL DEFAULT '0',
  `BACKHAUL` decimal(18,2) NOT NULL DEFAULT '0.00',
  `REFERENCE` varchar(50) NOT NULL,
  `REMARKS` varchar(500) NOT NULL,
  `STATUS` varchar(1) NOT NULL DEFAULT 'N',
  `CREATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `CREATEDON` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PACKAGETYPE` varchar(50) NOT NULL,
  `PACKDIMENSION` varchar(50) NOT NULL,
  `STACKINGNORMS` varchar(100) NOT NULL,
  `CUSTTARGETRATE` decimal(18,2) NOT NULL,
  `ISLOADUNLOADCHARG` char(1) NOT NULL,
  `AVERAGELOAD` varchar(50) NOT NULL,
  `FREQUENCY` varchar(50) NOT NULL,
  `MHEREQUIREMENT` varchar(100) NOT NULL,
  `OTHERREQUIREMENT` varchar(100) NOT NULL,
  `NOOFTRIPS` int(10) unsigned NOT NULL DEFAULT '0',
  KEY `Index_1` (`REFERENCE`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `rfpdetailtemp`
--

/*!40000 ALTER TABLE `rfpdetailtemp` DISABLE KEYS */;
/*!40000 ALTER TABLE `rfpdetailtemp` ENABLE KEYS */;


--
-- Definition of table `rfpheader`
--

DROP TABLE IF EXISTS `rfpheader`;
CREATE TABLE `rfpheader` (
  `RFPID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `RFPCODE` varchar(20) NOT NULL,
  `RFPDESC` varchar(100) NOT NULL,
  `RFPDATE` datetime NOT NULL DEFAULT '1800-01-01 00:00:00',
  `CUSTOMERID` int(10) NOT NULL,
  `INDUSTRYTYPEID` int(10) NOT NULL,
  `RFPAMOUNT` decimal(18,2) NOT NULL DEFAULT '0.00',
  `STARTDATE` datetime NOT NULL DEFAULT '1800-01-01 00:00:00',
  `DUEDATE` datetime NOT NULL DEFAULT '1800-01-01 00:00:00',
  `RFPOWNER` int(10) NOT NULL DEFAULT '0',
  `CURRENTSTAGINGOWNER` int(10) NOT NULL DEFAULT '0',
  `DIESELRATE` decimal(7,2) NOT NULL DEFAULT '0.00',
  `AGEOFTRUCK` int(10) unsigned NOT NULL DEFAULT '0',
  `PRODUCTDESC` varchar(100) NOT NULL,
  `CASHOPPID` varchar(50) NOT NULL,
  `OPPRDOMAIN` varchar(50) NOT NULL,
  `DISTRIBUTIONTYPE` varchar(50) NOT NULL,
  `ISMULTIDROP` char(1) NOT NULL DEFAULT 'N',
  `ISHUBORWHREQ` char(1) NOT NULL DEFAULT 'N',
  `CARGOTYPE` varchar(50) NOT NULL,
  `PAYMENTTERM` int(10) unsigned NOT NULL DEFAULT '0',
  `RATEUOM` varchar(50) NOT NULL,
  `PENALITIES` varchar(100) NOT NULL,
  `DETENTION` varchar(100) NOT NULL,
  `ESCCLAUSE` varchar(100) NOT NULL,
  `ACTIVE` char(1) NOT NULL,
  `CREATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `CREATEDON` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `UPDATEDON` datetime NOT NULL DEFAULT '1800-01-01 00:00:00',
  PRIMARY KEY (`RFPID`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `rfpheader`
--

/*!40000 ALTER TABLE `rfpheader` DISABLE KEYS */;
INSERT INTO `rfpheader` VALUES  (1,'RX0001','','2016-01-17 00:00:00',2,6,'700000.00','2016-01-17 14:18:21','1800-01-01 00:00:00',3,2,'40.00',2,'','','','','N','N','',0,'','','','','A',1,'2016-03-08 14:18:21',1,'2016-03-08 21:06:58'),
 (2,'RX0002','','2016-01-25 14:18:21',4,3,'500000.00','2016-04-08 14:18:21','1800-01-01 00:00:00',6,5,'42.00',3,'','','','','N','N','',0,'','','','','A',1,'2016-03-08 14:18:21',0,'1800-01-01 00:00:00'),
 (3,'RX0003','','2016-02-12 14:18:21',3,3,'600000.00','2016-04-08 14:18:21','1800-01-01 00:00:00',4,2,'42.00',4,'','','','','N','N','',0,'','','','','A',1,'2016-03-08 14:18:21',0,'1800-01-01 00:00:00'),
 (4,'RX0004','','2016-03-08 14:18:21',1,1,'400000.00','2016-04-08 14:18:21','1800-01-01 00:00:00',3,5,'42.00',2,'','','','','N','N','',0,'','','','','A',1,'2016-03-08 14:18:21',0,'1800-01-01 00:00:00'),
 (5,'RX000000010','','2016-10-01 00:00:00',5,1,'1000.00','2016-01-17 14:18:21','1800-01-01 00:00:00',1,1,'10.00',1,'','','','','N','N','',0,'','','','','A',1,'2016-03-08 14:18:21',1,'2016-03-10 18:24:36'),
 (6,'RX0006','','2016-01-17 00:00:00',2,6,'800000.00','2016-01-17 14:18:21','1800-01-01 00:00:00',3,2,'40.00',2,'','','','','N','N','',0,'','','','','A',1,'2016-03-08 14:18:21',1,'2016-03-08 21:06:58'),
 (7,'RX0007','','2016-02-03 14:18:21',4,3,'600000.00','2016-04-08 14:18:21','1800-01-01 00:00:00',2,4,'42.00',2,'','','','','N','N','',0,'','','','','A',1,'2016-03-08 14:18:21',0,'1800-01-01 00:00:00'),
 (8,'RX0008','','2016-01-06 14:18:21',5,3,'600000.00','2016-04-08 14:18:21','1800-01-01 00:00:00',5,4,'42.00',2,'','','','','N','N','',0,'','','','','A',1,'2016-03-08 14:18:21',0,'1800-01-01 00:00:00'),
 (9,'RX0009','','2016-01-12 14:18:21',4,3,'400000.00','2016-04-08 14:18:21','1800-01-01 00:00:00',3,6,'42.00',3,'','','','','N','N','',0,'','','','','A',1,'2016-03-08 15:38:37',0,'1800-01-01 00:00:00'),
 (10,'RX00010','','2016-01-17 14:18:21',3,3,'300000.00','2016-04-08 14:18:21','1800-01-01 00:00:00',5,2,'42.00',1,'','','','','N','N','',0,'','','','','A',1,'2016-03-08 15:38:37',0,'1800-01-01 00:00:00'),
 (11,'RX00011','','2016-01-17 00:00:00',6,6,'300000.00','2016-01-17 14:18:21','1800-01-01 00:00:00',3,2,'40.00',2,'','','','','N','N','',0,'','','','','I',1,'2016-03-08 21:12:28',1,'2016-03-08 21:15:13');
/*!40000 ALTER TABLE `rfpheader` ENABLE KEYS */;


--
-- Definition of table `rfptransaction`
--

DROP TABLE IF EXISTS `rfptransaction`;
CREATE TABLE `rfptransaction` (
  `RFPID` int(10) unsigned NOT NULL,
  `FROMLOCATION` int(10) NOT NULL,
  `FROMSTATEID` int(10) unsigned NOT NULL DEFAULT '0',
  `TOLOCATION` int(10) NOT NULL,
  `TOSTATEID` int(10) unsigned NOT NULL DEFAULT '0',
  `VEHICLETYPEID` int(10) NOT NULL,
  `SERVICETYPE` varchar(10) NOT NULL,
  `CLEANSHEETRATE` decimal(18,2) NOT NULL DEFAULT '0.00',
  `CONTRACTRATE` decimal(18,2) NOT NULL DEFAULT '0.00',
  `SHIPXRATE` decimal(18,2) NOT NULL DEFAULT '0.00',
  `PVSRFPRATE` decimal(18,2) NOT NULL DEFAULT '0.00',
  `MARKETRATE` decimal(18,2) NOT NULL DEFAULT '0.00',
  `BAQUOTE` decimal(18,2) NOT NULL DEFAULT '0.00',
  `BACKHAULAVL` char(1) NOT NULL DEFAULT 'N',
  `BACKHAULPERCENT` decimal(5,2) NOT NULL DEFAULT '0.00',
  `APPROVEDAMOUNT` decimal(18,2) NOT NULL DEFAULT '0.00',
  `ACTIVE` char(1) NOT NULL,
  `CREATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `CREATEDON` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `UPDATEDON` datetime NOT NULL DEFAULT '1800-01-01 00:00:00',
  PRIMARY KEY (`RFPID`,`FROMLOCATION`,`TOLOCATION`,`VEHICLETYPEID`,`TOSTATEID`,`FROMSTATEID`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `rfptransaction`
--

/*!40000 ALTER TABLE `rfptransaction` DISABLE KEYS */;
INSERT INTO `rfptransaction` VALUES  (1,1,20,2,10,2,'EXP','700000.00','700000.00','700000.00','700000.00','17000.00','16000.00','N','0.00','700000.00','A',1,'2016-03-08 14:54:46',0,'2016-03-12 21:00:11'),
 (2,1,20,4,7,5,'EXP','500000.00','500000.00','500000.00','20000.00','220000.00','20000.00','N','0.00','500000.00','A',1,'2016-03-08 14:54:46',0,'1800-01-01 00:00:00'),
 (3,2,10,4,7,4,'EXP','600000.00','600000.00','600000.00','30000.00','400000.00','30000.00','N','0.00','600000.00','A',1,'2016-03-08 14:54:46',0,'1800-01-01 00:00:00'),
 (4,1,20,3,18,1,'EXP','400000.00','400000.00','400000.00','250000.00','200000.00','250000.00','N','0.00','400000.00','A',1,'2016-03-08 14:54:46',0,'1800-01-01 00:00:00'),
 (5,3,18,5,3,3,'EXP','300000.00','300000.00','300000.00','10000.00','20000.00','10000.00','N','0.00','300000.00','A',1,'2016-03-08 14:54:46',0,'1800-01-01 00:00:00'),
 (6,2,10,4,7,1,'ORD','800000.00','800000.00','800000.00','20000.00','30000.00','20000.00','N','0.00','800000.00','A',1,'2016-03-08 14:54:46',0,'1800-01-01 00:00:00'),
 (7,3,18,1,20,4,'ORD','600000.00','600000.00','600000.00','10000.00','500000.00','10000.00','N','0.00','600000.00','A',1,'2016-03-08 14:54:46',0,'1800-01-01 00:00:00'),
 (8,4,7,2,10,3,'ORD','600000.00','600000.00','600000.00','30000.00','40000.00','30000.00','N','0.00','600000.00','A',1,'2016-03-08 14:54:46',0,'1800-01-01 00:00:00'),
 (9,5,3,3,18,1,'AIR','400000.00','400000.00','400000.00','10000.00','30000.00','10000.00','N','0.00','400000.00','A',1,'2016-03-08 14:54:46',0,'1800-01-01 00:00:00'),
 (10,3,18,5,3,4,'AIR','300000.00','300000.00','300000.00','20000.00','30000.00','20000.00','N','0.00','300000.00','A',1,'2016-03-08 14:54:46',0,'1800-01-01 00:00:00');
/*!40000 ALTER TABLE `rfptransaction` ENABLE KEYS */;


--
-- Definition of table `state`
--

DROP TABLE IF EXISTS `state`;
CREATE TABLE `state` (
  `STATEID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `STATECODE` varchar(3) NOT NULL,
  `STATENAME` varchar(100) NOT NULL,
  `ACTIVE` char(1) NOT NULL,
  `CREATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `CREATEDON` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `UPDATEDON` datetime NOT NULL DEFAULT '1800-01-01 00:00:00',
  PRIMARY KEY (`STATEID`)
) ENGINE=InnoDB AUTO_INCREMENT=64 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `state`
--

/*!40000 ALTER TABLE `state` DISABLE KEYS */;
INSERT INTO `state` VALUES  (1,'AN','ARUNACHAL PRADESH','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (2,'AND','ANDAMAN','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (3,'AP','ANDHRA PRADESH','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (4,'AS','ASSAM','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (5,'BAN','BANGLADESH','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (6,'BH','BHUTAN','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (7,'BR','BIHAR','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (8,'CG','CHATTISGARH','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (9,'DD','DAMAN AND DIU','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (10,'DL','DELHI','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (11,'DN','DADRA NAGAR HAVELI','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (12,'GA','GOA','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (13,'GJ','GUJARAT','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (14,'HP','HIMACHAL PRADESH','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (15,'HR','HARYANA','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (16,'JH','JHARKHAND','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (17,'JM','JAMMU AND KASHMIR','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (18,'KA','KARNATAKA','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (19,'KL','KERALA','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (20,'MH','MAHARASHTRA','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (21,'ML','MEGHALAYA','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (22,'MN','MANIPUR','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (23,'MP','MADHYA PRADESH','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (24,'MZ','MIZORAM','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (25,'NL','NAGALAND','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (26,'NP','NEPAL','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (27,'OR','ORISSA','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (28,'PB','PUNJAB','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (29,'PY','PUDUCHERRY','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (30,'RJ','RAJASTHAN','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (31,'SK','SIKKIM','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (32,'TN','TAMILNADU','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (33,'TR','TRIPURA','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (34,'UK','UTTARAKHAND','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (35,'UP','UTTAR PRADESH','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (36,'UT','UTRANCHAL','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00'),
 (37,'WB','WEST BENGAL','A',1,'2016-03-09 23:54:39',0,'1800-01-01 00:00:00');
/*!40000 ALTER TABLE `state` ENABLE KEYS */;


--
-- Definition of table `user`
--

DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `USERID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `USERCODE` varchar(20) NOT NULL,
  `FIRSTNAME` varchar(50) NOT NULL,
  `LASTNAME` varchar(50) NOT NULL,
  `PASSWORD` varchar(100) NOT NULL,
  `EMAILID` varchar(255) NOT NULL,
  `ACTIVE` char(1) NOT NULL DEFAULT 'A',
  `CREATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `CREATEDON` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `UPDATEDON` datetime NOT NULL DEFAULT '1800-01-01 00:00:00',
  PRIMARY KEY (`USERID`),
  KEY `ixUserCode` (`USERCODE`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user`
--

/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES  (1,'ADMIN','ADMIN','ADMIN','pass,123','','A',1,'2016-03-08 12:29:11',0,'1800-01-01 00:00:00'),
 (2,'23095502','HARI','PRAKASH','pass,123','23095502@mahindra.com','A',1,'2016-03-08 12:29:11',0,'1800-01-01 00:00:00'),
 (3,'23145258','NIKEH','BHABAL','pass,123','23145258@mahindra.com','A',1,'2016-03-08 12:29:11',0,'1800-01-01 00:00:00'),
 (4,'23142920','SATYAJEET','THAKARE','pass,123','23142920@mahindra.com','A',1,'2016-03-08 12:29:11',0,'1800-01-01 00:00:00'),
 (5,'23142923','YOGINI','MOKASHI','pass,123','23142923@mahindra.com','A',1,'2016-03-08 12:29:11',0,'1800-01-01 00:00:00'),
 (6,'23148127','PRAVEEN','SINGH','pass,123','23148127@mahindra.com','A',1,'2016-03-08 12:29:11',0,'1800-01-01 00:00:00'),
 (16,'23148128','UMESH','PADTE','pass','23140007@mahindra.com','I',1,'2016-03-08 17:59:36',1,'2016-03-08 18:07:53'),
 (17,'23232323','CHETAN','PATIL','pass','23140007@mahindra.com','A',1,'2016-03-08 18:08:51',0,'1800-01-01 00:00:00'),
 (18,'23140001','VINAY','SINGH','pass,123','23140001@mahindra.com','A',1,'2016-03-08 19:14:11',0,'1800-01-01 00:00:00'),
 (19,'23140002','SHANTANU','ROY','pass','23140002@mahindra.com','A',1,'2016-03-08 19:15:44',1,'2016-03-08 19:20:45');
/*!40000 ALTER TABLE `user` ENABLE KEYS */;


--
-- Definition of table `userrfpheader`
--

DROP TABLE IF EXISTS `userrfpheader`;
CREATE TABLE `userrfpheader` (
  `RFPID` int(10) unsigned NOT NULL,
  `USERID` int(10) NOT NULL,
  `CURRENTSTAGINGOWNER` int(10) NOT NULL,
  `RECENTDATE` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `ACTIVE` char(1) NOT NULL DEFAULT 'A',
  `CREATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `CREATEDON` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `UPDATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `UPDATEDON` datetime NOT NULL DEFAULT '1800-01-01 00:00:00',
  PRIMARY KEY (`RFPID`,`USERID`,`CURRENTSTAGINGOWNER`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `userrfpheader`
--

/*!40000 ALTER TABLE `userrfpheader` DISABLE KEYS */;
INSERT INTO `userrfpheader` VALUES  (1,2,3,'2016-03-08 16:40:14','A',1,'2016-03-08 16:40:03',0,'1800-01-01 00:00:00'),
 (2,6,5,'2016-03-08 16:41:31','A',1,'2016-03-08 16:40:03',0,'1800-01-01 00:00:00'),
 (3,4,2,'2016-03-08 16:44:36','A',1,'2016-03-08 16:40:03',0,'1800-01-01 00:00:00'),
 (4,3,5,'2016-03-08 16:44:36','A',1,'2016-03-08 16:40:03',0,'1800-01-01 00:00:00'),
 (5,5,6,'2016-03-08 16:44:36','A',1,'2016-03-08 16:40:03',0,'1800-01-01 00:00:00'),
 (6,2,6,'2016-03-08 16:44:36','A',1,'2016-03-08 16:40:03',0,'1800-01-01 00:00:00'),
 (7,2,4,'2016-03-08 16:44:36','A',1,'2016-03-08 16:40:03',0,'1800-01-01 00:00:00'),
 (8,5,4,'2016-03-08 16:45:59','A',1,'2016-03-08 16:40:03',0,'1800-01-01 00:00:00'),
 (9,3,6,'2016-03-08 16:45:59','A',0,'2016-03-08 16:45:59',0,'1800-01-01 00:00:00'),
 (10,5,2,'2016-03-08 16:45:59','A',1,'2016-03-08 16:40:03',0,'1800-01-01 00:00:00');
/*!40000 ALTER TABLE `userrfpheader` ENABLE KEYS */;


--
-- Definition of table `vehicletype`
--

DROP TABLE IF EXISTS `vehicletype`;
CREATE TABLE `vehicletype` (
  `VEHICLETYPEID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `VEHICLETYPECODE` varchar(30) NOT NULL,
  `VEHICLETYPENAME` varchar(50) NOT NULL,
  `ACTIVE` char(1) NOT NULL,
  `CREATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `CREATEDON` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATEDBY` int(10) unsigned NOT NULL DEFAULT '0',
  `UPDATEDON` datetime NOT NULL DEFAULT '1800-01-01 00:00:00',
  PRIMARY KEY (`VEHICLETYPEID`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `vehicletype`
--

/*!40000 ALTER TABLE `vehicletype` DISABLE KEYS */;
INSERT INTO `vehicletype` VALUES  (1,'04A12IND03','INDICA','A',1,'2016-03-08 13:45:54',0,'1800-01-01 00:00:00'),
 (2,'08A03XLY05','XYLO','A',1,'2016-03-08 13:45:54',0,'1800-01-01 00:00:00'),
 (3,'006A12SUV05','SUV','A',1,'2016-03-08 13:45:54',0,'1800-01-01 00:00:00'),
 (4,'004A12FOR03','FORD FIESTA','A',1,'2016-03-08 13:45:54',0,'1800-01-01 00:00:00'),
 (5,'006N24SUM05','SUMO','A',1,'2016-03-08 13:45:54',0,'1800-01-01 00:00:00');
/*!40000 ALTER TABLE `vehicletype` ENABLE KEYS */;


--
-- Definition of procedure `SP_IMPORTRFPDETAIL`
--

DROP PROCEDURE IF EXISTS `SP_IMPORTRFPDETAIL`;

DELIMITER $$

/*!50003 SET @TEMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_IMPORTRFPDETAIL`(
IN _RFPID INT,
IN _FROMLOCATION VARCHAR(100),
IN _TOLOCATION VARCHAR(100),
IN _VEHICLETYPE VARCHAR(50),
IN _APPROVEDAMOUNT DECIMAL(18,2),
IN _SERVICETYPE VARCHAR(10),
IN _RFPVOLUME DECIMAL(18,2),
IN _RFPDURATION DECIMAL(18,2),
IN _LOADINGUNLOADINGTIME DECIMAL(7,2),
IN _DISTANCE INT(10),
IN _BACKHAUL DECIMAL(5,2),
IN _REFERENCE VARCHAR(50),
IN _REMARKS VARCHAR(500),
IN _STATUS CHAR(1),
IN _CREATEDBY INT,
IN _CREATEDON DATETIME,
IN _MODE VARCHAR(25),
IN _PACKAGETYPE VARCHAR(50),
IN _PACKDIMENSION VARCHAR(50),
IN _STACKINGNORMS VARCHAR(100),
IN _CUSTTARGETRATE DECIMAL(18,2),
IN _ISLOADUNLOADCHARG VARCHAR(1),
IN _AVERAGELOAD VARCHAR(50),
IN _FREQUENCY VARCHAR(50),
IN _MHEREQUIREMENT VARCHAR(100),
IN _OTHERREQUIREMENT VARCHAR(100),
IN _NOOFTRIPS INT,
IN _TRIPTYPE VARCHAR(20),
IN _FROMSTATE VARCHAR(100),
IN _TOSTATE VARCHAR(100)
)
BEGIN

    IF (_MODE = 'INSERT') THEN
        SET @FROM = (SELECT LOCATIONID FROM LOCATION WHERE LOCATIONNAME = _FROMLOCATION LIMIT 1);
        SET @TO = (SELECT LOCATIONID FROM LOCATION WHERE LOCATIONNAME = _TOLOCATION LIMIT 1);
        SET @VEHTYPE = (SELECT VEHICLETYPEID FROM VEHICLETYPE WHERE VEHICLETYPENAME = _VEHICLETYPE LIMIT 1);
        SET @PACKID = (SELECT PACKAGETYPEID FROM PACKAGETYPE WHERE PACKAGETYPENAME = _PACKAGETYPE LIMIT 1);
        SET @FROMSTATE = (SELECT STATEID FROM STATE WHERE STATENAME = _FROMSTATE LIMIT 1);
        SET @TOSTATE = (SELECT STATEID FROM STATE WHERE STATENAME = _TOSTATE LIMIT 1);

        IF(@PACKID IS NULL) THEN
          SET @PACKID = 5;
        END IF;

        IF (_TRIPTYPE = 'ROUND TRIP') THEN
            SET @ISROUNDTRIP = 'Y';
        ELSE
            SET @ISROUNDTRIP = 'N';
        END IF;

        IF(@FROM IS NULL) THEN
            INSERT INTO RFPDETAILTEMP(RFPID, FROMLOCATION, TOLOCATION, VEHICLETYPE, APPROVEDAMOUNT, SERVICETYPE,
                RFPVOLUME, RFPDURATION, LOADINGUNLOADINGTIME, DISTANCE, BACKHAUL, FROMSTATE, TOSTATE,
                PACKAGETYPE, PACKDIMENSION, STACKINGNORMS, CUSTTARGETRATE, ISLOADUNLOADCHARG, AVERAGELOAD,
                FREQUENCY, MHEREQUIREMENT, OTHERREQUIREMENT, NOOFTRIPS, ISROUNDTRIP,
                REFERENCE, `STATUS`, REMARKS,  CREATEDBY)
              VALUES(_RFPID, _FROMLOCATION, _TOLOCATION, _VEHICLETYPE, _APPROVEDAMOUNT, _SERVICETYPE,
                _RFPVOLUME, _RFPDURATION, _LOADINGUNLOADINGTIME, _DISTANCE, _BACKHAUL, _FROMSTATE, _TOSTATE,
                _PACKAGETYPE, _PACKDIMENSION, _STACKINGNORMS, _CUSTTARGETRATE, _ISLOADUNLOADCHARG, _AVERAGELOAD,
                _FREQUENCY, _MHEREQUIREMENT, _OTHERREQUIREMENT, _NOOFTRIPS, @ISROUNDTRIP,
                _REFERENCE, 'I', 'Invalid from location', _CREATEDBY);
        ELSEIF(@TO IS NULL) THEN
            INSERT INTO RFPDETAILTEMP(RFPID, FROMLOCATION, TOLOCATION, VEHICLETYPE, APPROVEDAMOUNT, SERVICETYPE,
                RFPVOLUME, RFPDURATION, LOADINGUNLOADINGTIME, DISTANCE, BACKHAUL, FROMSTATE, TOSTATE,
                PACKAGETYPE, PACKDIMENSION, STACKINGNORMS, CUSTTARGETRATE, ISLOADUNLOADCHARG, AVERAGELOAD,
                FREQUENCY, MHEREQUIREMENT, OTHERREQUIREMENT, NOOFTRIPS, ISROUNDTRIP,
                REFERENCE, `STATUS`, REMARKS,  CREATEDBY)
              VALUES(_RFPID, _FROMLOCATION, _TOLOCATION, _VEHICLETYPE, _APPROVEDAMOUNT, _SERVICETYPE,
              _RFPVOLUME, _RFPDURATION, _LOADINGUNLOADINGTIME, _DISTANCE, _BACKHAUL, _FROMSTATE, _TOSTATE,
              _PACKAGETYPE, _PACKDIMENSION, _STACKINGNORMS, _CUSTTARGETRATE, _ISLOADUNLOADCHARG, _AVERAGELOAD,
              _FREQUENCY, _MHEREQUIREMENT, _OTHERREQUIREMENT, _NOOFTRIPS, @ISROUNDTRIP,
              _REFERENCE, 'I', 'Invalid to location', _CREATEDBY);
        ELSEIF(@VEHTYPE IS NULL) THEN
            INSERT INTO RFPDETAILTEMP(RFPID, FROMLOCATION, TOLOCATION, VEHICLETYPE, APPROVEDAMOUNT, SERVICETYPE,
                RFPVOLUME, RFPDURATION, LOADINGUNLOADINGTIME, DISTANCE, BACKHAUL, FROMSTATE, TOSTATE,
                PACKAGETYPE, PACKDIMENSION, STACKINGNORMS, CUSTTARGETRATE, ISLOADUNLOADCHARG, AVERAGELOAD,
                FREQUENCY, MHEREQUIREMENT, OTHERREQUIREMENT, NOOFTRIPS, ISROUNDTRIP,
                REFERENCE, `STATUS`, REMARKS,  CREATEDBY)
              VALUES(_RFPID, _FROMLOCATION, _TOLOCATION, _VEHICLETYPE, _APPROVEDAMOUNT, _SERVICETYPE,
              _RFPVOLUME, _RFPDURATION, _LOADINGUNLOADINGTIME, _DISTANCE, _BACKHAUL, _FROMSTATE, _TOSTATE,
              _PACKAGETYPE, _PACKDIMENSION, _STACKINGNORMS, _CUSTTARGETRATE, _ISLOADUNLOADCHARG, _AVERAGELOAD,
              _FREQUENCY, _MHEREQUIREMENT, _OTHERREQUIREMENT, _NOOFTRIPS, @ISROUNDTRIP,
              _REFERENCE, 'I', 'Invalid vehivle type', _CREATEDBY);
        ELSEIF(@FROMSTATE IS NULL) THEN
            INSERT INTO RFPDETAILTEMP(RFPID, FROMLOCATION, TOLOCATION, VEHICLETYPE, APPROVEDAMOUNT, SERVICETYPE,
                RFPVOLUME, RFPDURATION, LOADINGUNLOADINGTIME, DISTANCE, BACKHAUL, FROMSTATE, TOSTATE,
                PACKAGETYPE, PACKDIMENSION, STACKINGNORMS, CUSTTARGETRATE, ISLOADUNLOADCHARG, AVERAGELOAD,
                FREQUENCY, MHEREQUIREMENT, OTHERREQUIREMENT, NOOFTRIPS, ISROUNDTRIP,
                REFERENCE, `STATUS`, REMARKS,  CREATEDBY)
              VALUES(_RFPID, _FROMLOCATION, _TOLOCATION, _VEHICLETYPE, _APPROVEDAMOUNT, _SERVICETYPE,
              _RFPVOLUME, _RFPDURATION, _LOADINGUNLOADINGTIME, _DISTANCE, _BACKHAUL, _FROMSTATE, _TOSTATE,
              _PACKAGETYPE, _PACKDIMENSION, _STACKINGNORMS, _CUSTTARGETRATE, _ISLOADUNLOADCHARG, _AVERAGELOAD,
              _FREQUENCY, _MHEREQUIREMENT, _OTHERREQUIREMENT, _NOOFTRIPS, @ISROUNDTRIP,
              _REFERENCE, 'I', 'Invalid from state', _CREATEDBY);
        ELSEIF(@TOSTATE IS NULL) THEN
            INSERT INTO RFPDETAILTEMP(RFPID, FROMLOCATION, TOLOCATION, VEHICLETYPE, APPROVEDAMOUNT, SERVICETYPE,
                RFPVOLUME, RFPDURATION, LOADINGUNLOADINGTIME, DISTANCE, BACKHAUL, FROMSTATE, TOSTATE,
                PACKAGETYPE, PACKDIMENSION, STACKINGNORMS, CUSTTARGETRATE, ISLOADUNLOADCHARG, AVERAGELOAD,
                FREQUENCY, MHEREQUIREMENT, OTHERREQUIREMENT, NOOFTRIPS, ISROUNDTRIP,
                REFERENCE, `STATUS`, REMARKS,  CREATEDBY)
              VALUES(_RFPID, _FROMLOCATION, _TOLOCATION, _VEHICLETYPE, _APPROVEDAMOUNT, _SERVICETYPE,
              _RFPVOLUME, _RFPDURATION, _LOADINGUNLOADINGTIME, _DISTANCE, _BACKHAUL, _FROMSTATE, _TOSTATE,
              _PACKAGETYPE, _PACKDIMENSION, _STACKINGNORMS, _CUSTTARGETRATE, _ISLOADUNLOADCHARG, _AVERAGELOAD,
              _FREQUENCY, _MHEREQUIREMENT, _OTHERREQUIREMENT, _NOOFTRIPS, @ISROUNDTRIP,
              _REFERENCE, 'I', 'Invalid to state', _CREATEDBY);
        ELSEIF EXISTS(SELECT RFPID FROM RFPDETAIL WHERE RFPID = _RFPID AND FROMLOCATION = @FROM AND TOLOCATION = @TO
              AND VEHICLETYPEID = @VEHTYPE AND FROMSTATEID = @FROMSTATE AND TOSTATEID = @TOSTATE) THEN
            INSERT INTO RFPDETAILTEMP(RFPID, FROMLOCATION, TOLOCATION, VEHICLETYPE, APPROVEDAMOUNT, SERVICETYPE,
                RFPVOLUME, RFPDURATION, LOADINGUNLOADINGTIME, DISTANCE, BACKHAUL, FROMSTATE, TOSTATE,
                PACKAGETYPE, PACKDIMENSION, STACKINGNORMS, CUSTTARGETRATE, ISLOADUNLOADCHARG, AVERAGELOAD,
                FREQUENCY, MHEREQUIREMENT, OTHERREQUIREMENT, NOOFTRIPS, ISROUNDTRIP,
                REFERENCE, `STATUS`, REMARKS,  CREATEDBY)
              VALUES(_RFPID, _FROMLOCATION, _TOLOCATION, _VEHICLETYPE, _APPROVEDAMOUNT, _SERVICETYPE,
              _RFPVOLUME, _RFPDURATION, _LOADINGUNLOADINGTIME, _DISTANCE, _BACKHAUL, _FROMSTATE, _TOSTATE,
              _PACKAGETYPE, _PACKDIMENSION, _STACKINGNORMS, _CUSTTARGETRATE, _ISLOADUNLOADCHARG, _AVERAGELOAD,
              _FREQUENCY, _MHEREQUIREMENT, _OTHERREQUIREMENT, _NOOFTRIPS, @ISROUNDTRIP,
              _REFERENCE, 'I', 'Alreay exists', _CREATEDBY);
        ELSE
            INSERT INTO RFPDETAIL(RFPID, FROMLOCATION, TOLOCATION, VEHICLETYPEID, APPROVEDAMOUNT, SERVICETYPE,
                RFPVOLUME, RFPDURATION, LOADINGUNLOADINGTIME, DISTANCE, BACKHAUL, FROMSTATEID, TOSTATEID,
                PACKAGETYPEID, PACKDIMENSION, STACKINGNORMS, CUSTTARGETRATE, ISLOADUNLOADCHARG, AVERAGELOAD,
                FREQUENCY, MHEREQUIREMENT, OTHERREQUIREMENT, NOOFTRIPS, ISROUNDTRIP, ACTIVE, CREATEDBY)
              VALUES(_RFPID, @FROM, @TO, @VEHTYPE, _APPROVEDAMOUNT, _SERVICETYPE, _RFPVOLUME, _RFPDURATION,
                _LOADINGUNLOADINGTIME, _DISTANCE, _BACKHAUL, @FROMSTATE, @TOSTATE,
                 @PACKID, _PACKDIMENSION, _STACKINGNORMS, _CUSTTARGETRATE, _ISLOADUNLOADCHARG, _AVERAGELOAD,
                _FREQUENCY, _MHEREQUIREMENT, _OTHERREQUIREMENT, _NOOFTRIPS, @ISROUNDTRIP, 'A', _CREATEDBY);

            INSERT INTO RFPTRANSACTION(RFPID, FROMLOCATION, TOLOCATION, FROMSTATEID, TOSTATEID, VEHICLETYPEID, SERVICETYPE, CLEANSHEETRATE, CONTRACTRATE, SHIPXRATE,
                PVSRFPRATE, MARKETRATE, BAQUOTE, BACKHAULAVL, BACKHAULPERCENT, APPROVEDAMOUNT, ACTIVE, CREATEDBY)
              VALUES(_RFPID, @FROM, @TO, @FROMSTATE, @TOSTATE, @VEHTYPE, _SERVICETYPE, 0, 0, 0, 0, 0, 0, 0, 0, 0, 'P', _CREATEDBY);
        END IF;

    ELSEIF(_MODE = 'GETALL') THEN
        SELECT RFPID, FROMLOCATION, TOLOCATION, VEHICLETYPE, APPROVEDAMOUNT, SERVICETYPE,
                RFPVOLUME, RFPDURATION, LOADINGUNLOADINGTIME, DISTANCE, BACKHAUL,
                PACKAGETYPE, PACKDIMENSION, STACKINGNORMS, CUSTTARGETRATE, ISLOADUNLOADCHARG, AVERAGELOAD,
                FREQUENCY, MHEREQUIREMENT, OTHERREQUIREMENT, NOOFTRIPS, FROMSTATE, TOSTATE,
                REFERENCE, `STATUS`, REMARKS FROM RFPDETAILTEMP WHERE REFERENCE = _REFERENCE;
    ELSEIF(_MODE = 'DELETEOLD') THEN
        DELETE FROM RFPDETAILTEMP WHERE DATE(CREATEDON)<DATE(SYSDATE());
    END IF;

END $$
/*!50003 SET SESSION SQL_MODE=@TEMP_SQL_MODE */  $$

DELIMITER ;

--
-- Definition of procedure `SP_MANAGECUSTOMER`
--

DROP PROCEDURE IF EXISTS `SP_MANAGECUSTOMER`;

DELIMITER $$

/*!50003 SET @TEMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_MANAGECUSTOMER`(
IN _CUSTOMERID INT,
IN _CUSTOMERCODE  VARCHAR(20),
IN _CUSTOMERNAME  VARCHAR(150),
IN _ADDRESS  VARCHAR(500),
IN _EMAIL  VARCHAR(255),
IN _CONTACTPERSON  VARCHAR(100),
IN _CONTACTNO  VARCHAR(100),
IN _CASHACCOUNTID VARCHAR(30),
IN _TOTALSPEND DECIMAL(18,2),
IN _ACTIVE CHAR(1),
IN _CREATEDBY INT,
IN _CREATEDON DATETIME,
IN _MODE VARCHAR(25))
BEGIN

    IF (_MODE = 'INSERT') THEN
        IF EXISTS(SELECT CUSTOMERID FROM `CUSTOMER` WHERE _CUSTOMERID > 0 AND CUSTOMERID = _CUSTOMERID) THEN
            UPDATE CUSTOMER SET CUSTOMERCODE = _CUSTOMERCODE, CUSTOMERNAME = _CUSTOMERNAME, ADDRESS = _ADDRESS,
                CONTACTPERSON = _CONTACTPERSON, EMAIL = _EMAIL, CONTACTNO = _CONTACTNO,
                CASHACCOUNTID = _CASHACCOUNTID, TOTALSPEND = _TOTALSPEND, ACTIVE = 'A', UPDATEDBY = _CREATEDBY,
                UPDATEDON = SYSDATE() WHERE CUSTOMERID = _CUSTOMERID;
            SELECT 'UPDATED SUCCESSFULLY' AS `RESULT`;

        ELSE
            INSERT INTO CUSTOMER(CUSTOMERCODE, CUSTOMERNAME, ADDRESS, CONTACTPERSON, EMAIL, CONTACTNO, CASHACCOUNTID, TOTALSPEND, CREATEDBY)
              VALUES(_CUSTOMERCODE, _CUSTOMERNAME, _ADDRESS, _CONTACTPERSON, _EMAIL, _CONTACTNO, _CASHACCOUNTID, _TOTALSPEND, _CREATEDBY);
            SELECT 'INSERTED SUCCESSFULLY' AS `RESULT`;
        END IF;

    ELSEIF(_MODE = 'DELETE') THEN
        UPDATE CUSTOMER SET ACTIVE = 'I', UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE() WHERE CUSTOMERID = _CUSTOMERID;
        SELECT 'DELETED SUCCESSFULLY' AS `RESULT`;

    ELSEIF(_MODE = 'BYCUSTOMERID') THEN
        SELECT CUSTOMERID, CUSTOMERCODE, CUSTOMERNAME, ADDRESS, CONTACTPERSON, CONTACTNO,
           CASHACCOUNTID, TOTALSPEND, EMAIL, ACTIVE FROM CUSTOMER WHERE CUSTOMERID = _CUSTOMERID;

    ELSEIF(_MODE = 'GETALL') THEN
        SELECT CUSTOMERID, CUSTOMERCODE, CUSTOMERNAME, ADDRESS, CONTACTPERSON, CONTACTNO,
           CASHACCOUNTID, TOTALSPEND, EMAIL, ACTIVE FROM CUSTOMER WHERE ACTIVE = 'A';

    ELSEIF(_MODE = 'SEARCH') THEN
        SELECT CUSTOMERID, CUSTOMERCODE, CUSTOMERNAME, ADDRESS, CONTACTPERSON, CONTACTNO,
           CASHACCOUNTID, TOTALSPEND, EMAIL, ACTIVE FROM CUSTOMER
          WHERE (CUSTOMERNAME LIKE (CONCAT(_CUSTOMERNAME,'%')) AND CUSTOMERCODE LIKE (CONCAT(_CUSTOMERCODE,'%')))
              AND ACTIVE = 'A';
    END IF;

END $$
/*!50003 SET SESSION SQL_MODE=@TEMP_SQL_MODE */  $$

DELIMITER ;

--
-- Definition of procedure `SP_MANAGEINDUSTRYTYPE`
--

DROP PROCEDURE IF EXISTS `SP_MANAGEINDUSTRYTYPE`;

DELIMITER $$

/*!50003 SET @TEMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_MANAGEINDUSTRYTYPE`(
IN _INDUSTRYTYPEID INT,
IN _INDUSTRYTYPECODE  VARCHAR(20),
IN _INDUSTRYTYPENAME  VARCHAR(50),
IN _ACTIVE CHAR(1),
IN _CREATEDBY INT,
IN _CREATEDON DATETIME,
IN _MODE VARCHAR(25))
BEGIN

    IF (_MODE = 'INSERT') THEN
        IF EXISTS(SELECT INDUSTRYTYPEID FROM INDUSTRYTYPE WHERE _INDUSTRYTYPEID > 0 AND INDUSTRYTYPEID = _INDUSTRYTYPEID) THEN
            UPDATE INDUSTRYTYPE SET INDUSTRYTYPECODE = _INDUSTRYTYPECODE, INDUSTRYTYPENAME = _INDUSTRYTYPENAME,
                ACTIVE = 'A', UPDATEDBY = _CREATEDBY,
                UPDATEDON = SYSDATE() WHERE INDUSTRYTYPEID = _INDUSTRYTYPEID;
            SELECT 'UPDATED SUCCESSFULLY' AS `RESULT`;
        ELSE
            INSERT INTO INDUSTRYTYPE(INDUSTRYTYPECODE, INDUSTRYTYPENAME, CREATEDBY)
              VALUES(_INDUSTRYTYPECODE, _INDUSTRYTYPENAME, _CREATEDBY);
            SELECT 'INSERTED SUCCESSFULLY' AS `RESULT`;
        END IF;

    ELSEIF(_MODE = 'DELETE') THEN
        UPDATE INDUSTRYTYPE SET ACTIVE = 'I', UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE() WHERE INDUSTRYTYPEID = _INDUSTRYTYPEID;
        SELECT 'DELETED SUCCESSFULLY' AS `RESULT`;

    ELSEIF(_MODE = 'BYINDUSTRYTYPEID') THEN
        SELECT INDUSTRYTYPEID, INDUSTRYTYPECODE, INDUSTRYTYPENAME, ACTIVE FROM INDUSTRYTYPE WHERE INDUSTRYTYPEID = _INDUSTRYTYPEID;

    ELSEIF(_MODE = 'GETALL') THEN
        SELECT INDUSTRYTYPEID, INDUSTRYTYPECODE, INDUSTRYTYPENAME, ACTIVE FROM INDUSTRYTYPE WHERE ACTIVE = 'A';

    ELSEIF(_MODE = 'SEARCH') THEN
        SELECT INDUSTRYTYPEID, INDUSTRYTYPECODE, INDUSTRYTYPENAME, ACTIVE FROM INDUSTRYTYPE
          WHERE (INDUSTRYTYPENAME LIKE (CONCAT(_INDUSTRYTYPENAME,'%')) AND INDUSTRYTYPECODE LIKE (CONCAT(_INDUSTRYTYPECODE,'%')))
              AND ACTIVE = 'A';
    END IF;

END $$
/*!50003 SET SESSION SQL_MODE=@TEMP_SQL_MODE */  $$

DELIMITER ;

--
-- Definition of procedure `SP_MANAGELOCATION`
--

DROP PROCEDURE IF EXISTS `SP_MANAGELOCATION`;

DELIMITER $$

/*!50003 SET @TEMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_MANAGELOCATION`(
IN _LOCATIONID INT,
IN _LOCATIONCODE  VARCHAR(20),
IN _LOCATIONNAME  VARCHAR(100),
IN _STATEID INT,
IN _ACTIVE CHAR(1),
IN _CREATEDBY INT,
IN _CREATEDON DATETIME,
IN _MODE VARCHAR(25))
BEGIN

    IF (_MODE = 'INSERT') THEN
        IF EXISTS(SELECT LOCATIONID FROM LOCATION WHERE _LOCATIONID > 0 AND LOCATIONID = _LOCATIONID) THEN
            UPDATE LOCATION SET LOCATIONCODE = _LOCATIONCODE, LOCATIONNAME = _LOCATIONNAME,
                STATEID = _STATEID, ACTIVE = 'A', UPDATEDBY = _CREATEDBY,
                UPDATEDON = SYSDATE() WHERE LOCATIONID = _LOCATIONID;

        SELECT 'UPDATED SUCCESSFULLY' AS `RESULT`;
        ELSE
            INSERT INTO LOCATION(LOCATIONCODE, LOCATIONNAME, STATEID, CREATEDBY)
              VALUES(_LOCATIONCODE, _LOCATIONNAME, _STATEID, _CREATEDBY);

        SELECT 'INSERTED SUCCESSFULLY' AS `RESULT`;
        END IF;

    ELSEIF(_MODE = 'DELETE') THEN
        UPDATE LOCATION SET ACTIVE = 'I', UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE() WHERE LOCATIONID = _LOCATIONID;

        SELECT 'DELETED SUCCESSFULLY' AS `RESULT`;

    ELSEIF(_MODE = 'BYLOCATIONID') THEN
        SELECT L.LOCATIONID, L.LOCATIONCODE, L.LOCATIONNAME, L.ACTIVE, S.STATEID, S.STATENAME
          FROM LOCATION L
            INNER JOIN STATE S ON S.STATE_ID = L.STATEID
          WHERE L.LOCATIONID = _LOCATIONID;

    ELSEIF(_MODE = 'GETALL') THEN
        SELECT L.LOCATIONID, L.LOCATIONCODE, L.LOCATIONNAME, L.ACTIVE, S.STATEID, S.STATENAME
          FROM LOCATION L
            INNER JOIN STATE S ON S.STATE_ID = L.STATEID WHERE L.ACTIVE = 'A';

    ELSEIF(_MODE = 'SEARCH') THEN
        SELECT L.LOCATIONID, L.LOCATIONCODE, L.LOCATIONNAME, L.ACTIVE, S.STATEID, S.STATENAME
          FROM LOCATION L
            INNER JOIN STATE S ON S.STATE_ID = L.STATEID
          WHERE (L.LOCATIONNAME LIKE (CONCAT(_LOCATIONNAME,'%')) AND L.LOCATIONCODE LIKE (CONCAT(_LOCATIONCODE,'%')))
              AND L.ACTIVE = 'A';
    END IF;

END $$
/*!50003 SET SESSION SQL_MODE=@TEMP_SQL_MODE */  $$

DELIMITER ;

--
-- Definition of procedure `SP_MANAGERFPDETAIL`
--

DROP PROCEDURE IF EXISTS `SP_MANAGERFPDETAIL`;

DELIMITER $$

/*!50003 SET @TEMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_MANAGERFPDETAIL`(
IN _RFPID INT,
IN _FROMLOCATION INT,
IN _TOLOCATION INT,
IN _VEHICLETYPEID INT,
IN _APPROVEDAMOUNT DECIMAL(18,2),
IN _SERVICETYPE VARCHAR(10),
IN _RFPVOLUME DECIMAL(18,2),
IN _RFPDURATION DECIMAL(18,2),
IN _LOADINGUNLOADINGTIME DECIMAL(7,2),
IN _DISTANCE INT(10),
IN _BACKHAUL DECIMAL(5,2),
IN _ACTIVE CHAR(1),
IN _CREATEDBY INT,
IN _CREATEDON DATETIME,
IN _SEARCH1 VARCHAR(200),
IN _SEARCH2 VARCHAR(200),
IN _SEARCH3 VARCHAR(200),
IN _MODE VARCHAR(25),
IN _PACKAGETYPEID INT,
IN _PACKDIMENSION VARCHAR(50),
IN _STACKINGNORMS VARCHAR(100),
IN _CUSTTARGETRATE DECIMAL(18,2),
IN _ISLOADUNLOADCHARG VARCHAR(1),
IN _AVERAGELOAD VARCHAR(50),
IN _FREQUENCY VARCHAR(50),
IN _MHEREQUIREMENT VARCHAR(100),
IN _OTHERREQUIREMENT VARCHAR(100),
IN _NOOFTRIPS INT,
IN _ISROUNDTRIP CHAR(1),
IN _FROMSTATEID INT,
IN _TOSTATEID INT
)
BEGIN

    IF (_MODE = 'INSERT') THEN
        IF EXISTS(SELECT RFPID FROM RFPDETAIL WHERE _RFPID > 0
              AND RFPID = _RFPID AND FROMLOCATION = _FROMLOCATION AND TOLOCATION = _TOLOCATION
              AND VEHICLETYPEID = _VEHICLETYPEID AND FROMSTATEID = _FROMSTATEID AND TOSTATEID = _TOSTATEID) THEN
            UPDATE RFPDETAIL SET APPROVEDAMOUNT = _APPROVEDAMOUNT, SERVICETYPE = _SERVICETYPE, ACTIVE = 'A',
                RFPVOLUME = _RFPVOLUME, RFPDURATION = _RFPDURATION, UPDATEDBY = _CREATEDBY,
                LOADINGUNLOADINGTIME = _LOADINGUNLOADINGTIME, DISTANCE = _DISTANCE, BACKHAUL = _BACKHAUL, ISROUNDTRIP = _ISROUNDTRIP,
                UPDATEDON = SYSDATE() WHERE RFPID = _RFPID AND FROMLOCATION = _FROMLOCATION AND TOLOCATION = _TOLOCATION
                    AND VEHICLETYPEID = _VEHICLETYPEID AND FROMSTATEID = _FROMSTATEID AND TOSTATEID = _TOSTATEID;
            SELECT 'UPDATED SUCCESSFULLY' AS `RESULT`;
        ELSE
            INSERT INTO RFPDETAIL(RFPID, FROMLOCATION, TOLOCATION, VEHICLETYPEID, APPROVEDAMOUNT, SERVICETYPE,
                RFPVOLUME, RFPDURATION, LOADINGUNLOADINGTIME, DISTANCE, BACKHAUL, ISROUNDTRIP,
                PACKAGETYPEID, PACKDIMENSION, STACKINGNORMS, CUSTTARGETRATE, ISLOADUNLOADCHARG, AVERAGELOAD,
                FREQUENCY, MHEREQUIREMENT, OTHERREQUIREMENT, NOOFTRIPS, ACTIVE, CREATEDBY, FROMSTATEID, TOSTATEID)
              VALUES(_RFPID, _FROMLOCATION, _TOLOCATION, _VEHICLETYPEID, _APPROVEDAMOUNT, _SERVICETYPE,
                _RFPVOLUME, _RFPDURATION, _LOADINGUNLOADINGTIME, _DISTANCE, _BACKHAUL, _ISROUNDTRIP,
                _PACKAGETYPEID, _PACKDIMENSION, _STACKINGNORMS, _CUSTTARGETRATE, _ISLOADUNLOADCHARG, _AVERAGELOAD,
                _FREQUENCY, _MHEREQUIREMENT, _OTHERREQUIREMENT, _NOOFTRIPS, _ACTIVE, _CREATEDBY, _FROMSTATEID, _TOSTATEID);

            INSERT INTO RFPTRANSACTION(RFPID, FROMLOCATION, TOLOCATION, FROMSTATEID, TOSTATEID, VEHICLETYPEID, SERVICETYPE, CLEANSHEETRATE, CONTRACTRATE, SHIPXRATE,
                PVSRFPRATE, MARKETRATE, BAQUOTE, BACKHAULAVL, BACKHAULPERCENT, APPROVEDAMOUNT, ACTIVE, CREATEDBY)
              VALUES(_RFPID, _FROMLOCATION, _TOLOCATION, _FROMSTATEID, _TOSTATEID, _VEHICLETYPEID, _SERVICETYPE, 0, 0, 0, 0, 0, 0, 0, 0, 0, 'P', _CREATEDBY);

            SELECT 'INSERTED SUCCESSFULLY' AS `RESULT`;
        END IF;

    ELSEIF(_MODE = 'DELETE') THEN
        UPDATE RFPDETAIL SET ACTIVE = 'I', UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE() WHERE RFPID = _RFPID AND FROMLOCATION = _FROMLOCATION AND TOLOCATION = _TOLOCATION
                    AND VEHICLETYPEID = _VEHICLETYPEID;
        SELECT 'DELETED SUCCESSFULLY' AS `RESULT`;

    ELSEIF(_MODE = 'DELETEBYRFPID') THEN
        UPDATE RFPDETAIL SET ACTIVE = 'I', UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE()
          WHERE RFPID = _RFPID ;
        SELECT 'DELEDED SUCCESSFULLY' AS `RESULT`;

    ELSEIF(_MODE = 'BYRFPID') THEN
        SELECT RD.RFPID, RD.FROMLOCATION, RD.TOLOCATION, RD.VEHICLETYPEID, RD.SERVICETYPE, RD.APPROVEDAMOUNT,
            RD.ACTIVE, FL.LOCATIONNAME AS FROMLOCATIONNAME, TL.LOCATIONNAME AS TOLOCATIONNAME, ISROUNDTRIP,
            RD.LOADINGUNLOADINGTIME, RD.DISTANCE, RD.BACKHAUL, RD.RFPVOLUME, RD.RFPDURATION, VT.VEHICLETYPENAME,
            RD.PACKAGETYPEID, RD.PACKDIMENSION, RD.STACKINGNORMS, RD.CUSTTARGETRATE, RD.ISLOADUNLOADCHARG, RD.AVERAGELOAD,
            RD.FREQUENCY, RD.MHEREQUIREMENT, RD.OTHERREQUIREMENT, RD.NOOFTRIPS, RD.ACTIVE, PK.PACKAGETYPENAME,
            RD.FROMSTATEID, RD.TOSTATEID, FS.STATENAME AS FROMSTATE, TS.STATENAME AS TOSTATE
        FROM RFPDETAIL RD
            INNER JOIN LOCATION FL ON FL.LOCATIONID = RD.FROMLOCATION
            INNER JOIN STATE FS ON FS.STATEID = RD.FROMSTATEID
            INNER JOIN LOCATION TL ON TL.LOCATIONID = RD.TOLOCATION
            INNER JOIN STATE TS ON TS.STATEID = RD.TOSTATEID
            INNER JOIN VEHICLETYPE VT ON VT.VEHICLETYPEID = RD.VEHICLETYPEID
            INNER JOIN PACKAGETYPE PK ON PK.PACKAGETYPEID = RD.PACKAGETYPEID
         WHERE RFPID = _RFPID;

    ELSEIF(_MODE = 'BYCUSTOMERID') THEN
        SELECT RD.RFPID, RD.FROMLOCATION, RD.TOLOCATION, RD.VEHICLETYPEID, RD.SERVICETYPE, RD.APPROVEDAMOUNT,
            RD.ACTIVE, FL.LOCATIONNAME AS FROMLOCATIONNAME, TL.LOCATIONNAME AS TOLOCATIONNAME, ISROUNDTRIP,
            RD.LOADINGUNLOADINGTIME, RD.DISTANCE, RD.BACKHAUL, RD.RFPVOLUME, RD.RFPDURATION, VT.VEHICLETYPENAME,
            RD.PACKAGETYPEID, RD.PACKDIMENSION, RD.STACKINGNORMS, RD.CUSTTARGETRATE, RD.ISLOADUNLOADCHARG, RD.AVERAGELOAD,
            RD.FREQUENCY, RD.MHEREQUIREMENT, RD.OTHERREQUIREMENT, RD.NOOFTRIPS, RD.ACTIVE, PK.PACKAGETYPENAME,
            RD.FROMSTATEID, RD.TOSTATEID, FS.STATENAME AS FROMSTATE, TS.STATENAME AS TOSTATE
        FROM RFPDETAIL RD
            INNER JOIN RFPHEADER RH ON RH.RFPID = RD.RFPID
            INNER JOIN LOCATION FL ON FL.LOCATIONID = RD.FROMLOCATION
            INNER JOIN STATE FS ON FS.STATEID = RD.FROMSTATEID
            INNER JOIN LOCATION TL ON TL.LOCATIONID = RD.TOLOCATION
            INNER JOIN STATE TS ON TS.STATEID = RD.TOSTATEID
            INNER JOIN VEHICLETYPE VT ON VT.VEHICLETYPEID = RD.VEHICLETYPEID
            INNER JOIN PACKAGETYPE PK ON PK.PACKAGETYPEID = RD.PACKAGETYPEID
         WHERE RH.CUSTOMERID = _RFPID;

    END IF;

END $$
/*!50003 SET SESSION SQL_MODE=@TEMP_SQL_MODE */  $$

DELIMITER ;

--
-- Definition of procedure `SP_MANAGERFPHEADER`
--

DROP PROCEDURE IF EXISTS `SP_MANAGERFPHEADER`;

DELIMITER $$

/*!50003 SET @TEMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_MANAGERFPHEADER`(
IN _RFPID INT,
IN _RFPCODE VARCHAR(20),
IN _RFPDATE DATETIME,
IN _CUSTOMERID INT,
IN _INDUSTRYTYPEID INT,
IN _RFPAMOUNT DECIMAL(18,2),
IN _STARTDATE DATETIME,
IN _RFPOWNER INT,
IN _CURRENTSTAGINGOWNER INT,
IN _DIESELRATE DECIMAL(18,2),
IN _AGEOFTRUCK INT,
IN _ACTIVE CHAR(1),
IN _CREATEDBY INT,
IN _CREATEDON DATETIME,
IN _SEARCH1 VARCHAR(200),
IN _SEARCH2 VARCHAR(200),
IN _SEARCH3 VARCHAR(200),
IN _MODE VARCHAR(25),
IN _RFPDESC VARCHAR(100),
IN _DUEDATE DATETIME,
IN _PRODUCTDESC VARCHAR(100),
IN _CASHOPPID VARCHAR(50),
IN _OPPRDOMAIN  VARCHAR(50),
IN _DISTRIBUTIONTYPE VARCHAR(50),
IN _ISMULTIDROP CHAR(1),
IN _ISHUBORWHREQ CHAR(1),
IN _CARGOTYPE  VARCHAR(50),
IN _PAYMENTTERM INT,
IN _RATEUOM VARCHAR(50),
IN _PENALITIES VARCHAR(100),
IN _DETENTION VARCHAR(100),
IN _ESCCLAUSE VARCHAR(100))
BEGIN

    IF (_MODE = 'INSERT') THEN
        IF EXISTS(SELECT RFPID FROM RFPHEADER WHERE _RFPID > 0 AND RFPID = _RFPID) THEN
            UPDATE RFPHEADER SET RFPDATE = _RFPDATE, INDUSTRYTYPEID = _INDUSTRYTYPEID,
                RFPAMOUNT = _RFPAMOUNT, STARTDATE = _STARTDATE, RFPOWNER = _RFPOWNER,
                CURRENTSTAGINGOWNER = _CURRENTSTAGINGOWNER, AGEOFTRUCK = _AGEOFTRUCK, DIESELRATE = _DIESELRATE,
                RFPDESC = _RFPDESC, DUEDATE = _DUEDATE, PRODUCTDESC = _PRODUCTDESC, CASHOPPID = _CASHOPPID,
                OPPRDOMAIN = _OPPRDOMAIN, DISTRIBUTIONTYPE = _DISTRIBUTIONTYPE, ISMULTIDROP = _ISMULTIDROP,
                ISHUBORWHREQ = _ISHUBORWHREQ, CARGOTYPE = _CARGOTYPE, PAYMENTTERM = _PAYMENTTERM,
                RATEUOM = _RATEUOM, PENALITIES = _PENALITIES, DETENTION = _DETENTION, ESCCLAUSE = _ESCCLAUSE,
                ACTIVE = 'A', UPDATEDBY = _CREATEDBY,

                UPDATEDON = SYSDATE() WHERE RFPID = _RFPID;
            SELECT 'SUCCESS' AS RESULT;
        ELSE
            IF EXISTS(SELECT RFPID FROM RFPHEADER WHERE CUSTOMERID = _CUSTOMERID) THEN
                UPDATE RFPHEADER SET RFPDATE = _RFPDATE, INDUSTRYTYPEID = _INDUSTRYTYPEID,
                    STARTDATE = _STARTDATE, RFPOWNER = _RFPOWNER, AGEOFTRUCK = _AGEOFTRUCK, DIESELRATE = _DIESELRATE,
                    CURRENTSTAGINGOWNER = _CURRENTSTAGINGOWNER, ACTIVE = 'A', UPDATEDBY = _CREATEDBY,
                    RFPDESC = _RFPDESC, DUEDATE = _DUEDATE, PRODUCTDESC = _PRODUCTDESC, CASHOPPID = _CASHOPPID,
                    OPPRDOMAIN = _OPPRDOMAIN, DISTRIBUTIONTYPE = _DISTRIBUTIONTYPE, ISMULTIDROP = _ISMULTIDROP,
                    ISHUBORWHREQ = _ISHUBORWHREQ, CARGOTYPE = _CARGOTYPE, PAYMENTTERM = _PAYMENTTERM,
                    RATEUOM = _RATEUOM, PENALITIES = _PENALITIES, DETENTION = _DETENTION, ESCCLAUSE = _ESCCLAUSE,
                    UPDATEDON = SYSDATE() WHERE CUSTOMERID = _CUSTOMERID;
                SELECT 'SUCCESS' AS RESULT;
            ELSE
              SET @RFPCODE = (SELECT CONCAT('RX',RIGHT(CONCAT('000000000',COUNT(RFPID)),9)) FROM RFPHEADER);

              INSERT INTO RFPHEADER(RFPID, RFPCODE, RFPDATE, CUSTOMERID, INDUSTRYTYPEID, RFPAMOUNT, STARTDATE,
                    RFPOWNER, CURRENTSTAGINGOWNER, DIESELRATE, AGEOFTRUCK,
                    RFPDESC, DUEDATE, PRODUCTDESC, CASHOPPID, OPPRDOMAIN, DISTRIBUTIONTYPE, ISMULTIDROP,
                    ISHUBORWHREQ, CARGOTYPE, PAYMENTTERM, RATEUOM, PENALITIES, DETENTION, ESCCLAUSE,
                    ACTIVE, CREATEDBY)
                VALUES(_RFPID, @RFPCODE, _RFPDATE, _CUSTOMERID, _INDUSTRYTYPEID, _RFPAMOUNT, _STARTDATE,
                    _RFPOWNER, _CURRENTSTAGINGOWNER, _DIESELRATE, _AGEOFTRUCK,
                    _RFPDESC, _DUEDATE, _PRODUCTDESC, _CASHOPPID, _OPPRDOMAIN, _DISTRIBUTIONTYPE, _ISMULTIDROP,
                    _ISHUBORWHREQ, _CARGOTYPE, _PAYMENTTERM, _RATEUOM, _PENALITIES, _DETENTION, _ESCCLAUSE,
                    _ACTIVE, _CREATEDBY);
              SELECT 'SUCCESS' AS RESULT;
            END IF;
        END IF;

    ELSEIF (_MODE = 'CLOSE') THEN
        UPDATE RFPHEADER SET ACTIVE = 'C', UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE() WHERE RFPID = _RFPID;

    ELSEIF (_MODE = 'PROGRESS') THEN
        UPDATE RFPHEADER SET ACTIVE = 'P', UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE() WHERE RFPID = _RFPID;

    ELSEIF(_MODE = 'DELETE') THEN
        UPDATE RFPHEADER SET ACTIVE = 'I', UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE() WHERE RFPID = _RFPID;

    ELSEIF(_MODE = 'BYRFPID') THEN
        SELECT RH.RFPID, RH.RFPCODE, RH.RFPDATE, RH.CUSTOMERID, RH.INDUSTRYTYPEID, RH.RFPAMOUNT, RH.STARTDATE,
            RH.DIESELRATE, RH.AGEOFTRUCK, RH.RFPOWNER, RH.CURRENTSTAGINGOWNER,
            (CASE WHEN RH.ACTIVE = 'A' THEN 'Submitted' WHEN RH.ACTIVE = 'C' THEN 'Completed'
              WHEN RH.ACTIVE = 'P' THEN 'In Progress' ELSE 'In Active' END) AS ACTIVE,
            C.CUSTOMERNAME, IT.INDUSTRYTYPENAME, CONCAT(OW.FIRSTNAME,' ',OW.LASTNAME) AS OWNERNAME,
            CONCAT(STO.FIRSTNAME,' ',STO.LASTNAME) AS CURRENTOWNERNAME,
            RH.RFPDESC, RH.DUEDATE, RH.PRODUCTDESC, RH.CASHOPPID, RH.OPPRDOMAIN, RH.DISTRIBUTIONTYPE, RH.ISMULTIDROP,
            RH.ISHUBORWHREQ, RH.CARGOTYPE, RH.PAYMENTTERM, RH.RATEUOM, RH.PENALITIES, RH.DETENTION, RH.ESCCLAUSE, RH.CREATEDBY, RH.CREATEDON
        FROM RFPHEADER RH
            INNER JOIN CUSTOMER C ON C.CUSTOMERID = RH.CUSTOMERID
            INNER JOIN INDUSTRYTYPE IT ON IT.INDUSTRYTYPEID = RH.INDUSTRYTYPEID
            INNER JOIN `USER` OW ON OW.USERID = RH.RFPOWNER
            INNER JOIN `USER` STO ON STO.USERID = RH.CURRENTSTAGINGOWNER
        WHERE RFPID = _RFPID;
    ELSEIF(_MODE = 'BYCUSTOMERID') THEN
        SELECT RH.RFPID, RH.RFPCODE, RH.RFPDATE, RH.CUSTOMERID, RH.INDUSTRYTYPEID, RH.RFPAMOUNT, RH.STARTDATE,
            RH.DIESELRATE, RH.AGEOFTRUCK, RH.RFPOWNER, RH.CURRENTSTAGINGOWNER,
            (CASE WHEN RH.ACTIVE = 'A' THEN 'Submitted' WHEN RH.ACTIVE = 'C' THEN 'Completed'
              WHEN RH.ACTIVE = 'P' THEN 'In Progress' ELSE 'In Active' END) AS ACTIVE,
            C.CUSTOMERNAME, IT.INDUSTRYTYPENAME, CONCAT(OW.FIRSTNAME,' ',OW.LASTNAME) AS OWNERNAME,
            CONCAT(STO.FIRSTNAME,' ',STO.LASTNAME) AS CURRENTOWNERNAME,
            RH.RFPDESC, RH.DUEDATE, RH.PRODUCTDESC, RH.CASHOPPID, RH.OPPRDOMAIN, RH.DISTRIBUTIONTYPE, RH.ISMULTIDROP,
            RH.ISHUBORWHREQ, RH.CARGOTYPE, RH.PAYMENTTERM, RH.RATEUOM, RH.PENALITIES, RH.DETENTION, RH.ESCCLAUSE, RH.CREATEDBY, RH.CREATEDON
        FROM RFPHEADER RH
            INNER JOIN CUSTOMER C ON C.CUSTOMERID = RH.CUSTOMERID
            INNER JOIN INDUSTRYTYPE IT ON IT.INDUSTRYTYPEID = RH.INDUSTRYTYPEID
            INNER JOIN `USER` OW ON OW.USERID = RH.RFPOWNER
            INNER JOIN `USER` STO ON STO.USERID = RH.CURRENTSTAGINGOWNER
        WHERE C.CUSTOMERID = _CUSTOMERID;

    ELSEIF(_MODE = 'GETALL') THEN
        SELECT RH.RFPID, RH.RFPCODE, RH.RFPDATE, RH.CUSTOMERID, RH.INDUSTRYTYPEID, RH.RFPAMOUNT, RH.STARTDATE,
            RH.DIESELRATE, RH.AGEOFTRUCK, RH.RFPOWNER, RH.CURRENTSTAGINGOWNER,
            (CASE WHEN RH.ACTIVE = 'A' THEN 'Submitted' WHEN RH.ACTIVE = 'C' THEN 'Completed'
              WHEN RH.ACTIVE = 'P' THEN 'In Progress' ELSE 'In Active' END) AS ACTIVE,
            C.CUSTOMERNAME, IT.INDUSTRYTYPENAME, CONCAT(OW.FIRSTNAME,' ',OW.LASTNAME) AS OWNERNAME,
            CONCAT(STO.FIRSTNAME,' ',STO.LASTNAME) AS CURRENTOWNERNAME,
            RH.RFPDESC, RH.DUEDATE, RH.PRODUCTDESC, RH.CASHOPPID, RH.OPPRDOMAIN, RH.DISTRIBUTIONTYPE, RH.ISMULTIDROP,
            RH.ISHUBORWHREQ, RH.CARGOTYPE, RH.PAYMENTTERM, RH.RATEUOM, RH.PENALITIES, RH.DETENTION, RH.ESCCLAUSE, RH.CREATEDBY, RH.CREATEDON
        FROM RFPHEADER RH
            INNER JOIN CUSTOMER C ON C.CUSTOMERID = RH.CUSTOMERID
            INNER JOIN INDUSTRYTYPE IT ON IT.INDUSTRYTYPEID = RH.INDUSTRYTYPEID
            INNER JOIN `USER` OW ON OW.USERID = RH.RFPOWNER
            INNER JOIN `USER` STO ON STO.USERID = RH.CURRENTSTAGINGOWNER;

    ELSEIF(_MODE = 'SEARCH') THEN
        SELECT RH.RFPID, RH.RFPCODE, RH.RFPDATE, RH.CUSTOMERID, RH.INDUSTRYTYPEID, RH.RFPAMOUNT, RH.STARTDATE,
            RH.DIESELRATE, RH.AGEOFTRUCK, RH.RFPOWNER, RH.CURRENTSTAGINGOWNER,
            (CASE WHEN RH.ACTIVE = 'A' THEN 'Submitted' WHEN RH.ACTIVE = 'C' THEN 'Completed'
              WHEN RH.ACTIVE = 'P' THEN 'In Progress' ELSE 'In Active' END) AS ACTIVE,
            C.CUSTOMERNAME, IT.INDUSTRYTYPENAME, CONCAT(OW.FIRSTNAME,' ',OW.LASTNAME) AS OWNERNAME,
            CONCAT(STO.FIRSTNAME,' ',STO.LASTNAME) AS CURRENTOWNERNAME,
            RH.RFPDESC, RH.DUEDATE, RH.PRODUCTDESC, RH.CASHOPPID, RH.OPPRDOMAIN, RH.DISTRIBUTIONTYPE, RH.ISMULTIDROP,
            RH.ISHUBORWHREQ, RH.CARGOTYPE, RH.PAYMENTTERM, RH.RATEUOM, RH.PENALITIES, RH.DETENTION, RH.ESCCLAUSE, RH.CREATEDBY, RH.CREATEDON
        FROM RFPHEADER RH
            INNER JOIN CUSTOMER C ON C.CUSTOMERID = RH.CUSTOMERID
            INNER JOIN INDUSTRYTYPE IT ON IT.INDUSTRYTYPEID = RH.INDUSTRYTYPEID
            INNER JOIN `USER` OW ON OW.USERID = RH.RFPOWNER
            INNER JOIN `USER` STO ON STO.USERID = RH.CURRENTSTAGINGOWNER
        WHERE C.CUSTOMERNAME LIKE (CONCAT(_SEARCH1,'%'));
    END IF;

END $$
/*!50003 SET SESSION SQL_MODE=@TEMP_SQL_MODE */  $$

DELIMITER ;

--
-- Definition of procedure `SP_MANAGERFPTRANSACTION`
--

DROP PROCEDURE IF EXISTS `SP_MANAGERFPTRANSACTION`;

DELIMITER $$

/*!50003 SET @TEMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_MANAGERFPTRANSACTION`(
IN _RFPID INT,
IN _FROMLOCATION INT,
IN _TOLOCATION INT,
IN _VEHICLETYPEID INT,
IN _SERVICETYPE VARCHAR(10),
IN _CLEANSHEETRATE DECIMAL(18,2),
IN _CONTRACTRATE DECIMAL(18,2),
IN _SHIPXRATE DECIMAL(18,2),
IN _PVSRFPRATE DECIMAL(18,2),
IN _MARKETRATE DECIMAL(18,2),
IN _BAQUOTE DECIMAL(18,2),
IN _BACKHAULAVL CHAR(1),
IN _BACKHAULPERCENT DECIMAL(5,2),
IN _APPROVEDAMOUNT DECIMAL(18,2),
IN _ACTIVE CHAR(1),
IN _CREATEDBY INT,
IN _CREATEDON DATETIME,
IN _MODE VARCHAR(25),
IN _FROMSTATEID INT,
IN _TOSTATEID INT)
BEGIN

    IF (_MODE = 'INSERT') THEN
        IF EXISTS(SELECT RFPID FROM RFPTRANSACTION WHERE _RFPID > 0
              AND RFPID = _RFPID AND FROMLOCATION = _FROMLOCATION AND TOLOCATION = _TOLOCATION
              AND VEHICLETYPEID = _VEHICLETYPEID) THEN
            UPDATE RFPTRANSACTION SET SERVICETYPE = _SERVICETYPE, CLEANSHEETRATE = _CLEANSHEETRATE, CONTRACTRATE = _CONTRACTRATE,
                SHIPXRATE = _SHIPXRATE, PVSRFPRATE = _PVSRFPRATE, MARKETRATE = _MARKETRATE, BAQUOTE = _BAQUOTE, BACKHAULAVL = _BACKHAULAVL,
                BACKHAULPERCENT = _BACKHAULPERCENT, APPROVEDAMOUNT = _APPROVEDAMOUNT, ACTIVE = 'A', UPDATEDBY = _CREATEDBY,
                UPDATEDON = SYSDATE() WHERE RFPID = _RFPID AND FROMLOCATION = _FROMLOCATION AND TOLOCATION = _TOLOCATION
                    AND VEHICLETYPEID = _VEHICLETYPEID AND FROMSTATEID = _FROMSTATEID AND TOSTATEID = _TOSTATEID;
        ELSE
            INSERT INTO RFPTRANSACTION(RFPID, FROMLOCATION, TOLOCATION, VEHICLETYPEID, SERVICETYPE, CLEANSHEETRATE, CONTRACTRATE, SHIPXRATE,
                PVSRFPRATE, MARKETRATE, BAQUOTE, BACKHAULAVL, BACKHAULPERCENT, APPROVEDAMOUNT, ACTIVE, CREATEDBY)
              VALUES(_RFPID, _FROMLOCATION, _TOLOCATION, _VEHICLETYPEID, _SERVICETYPE, _CLEANSHEETRATE, _CONTRACTRATE, _SHIPXRATE,
                _PVSRFPRATE, _MARKETRATE, _BAQUOTE, _BACKHAULAVL, _BACKHAULPERCENT, _APPROVEDAMOUNT, _ACTIVE, _CREATEDBY);
        END IF;

    ELSEIF(_MODE = 'DELETE') THEN
        UPDATE RFPTRANSACTION SET ACTIVE = 'I', UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE()
            WHERE RFPID = _RFPID AND FROMLOCATION = _FROMLOCATION AND TOLOCATION = _TOLOCATION
                    AND VEHICLETYPEID = _VEHICLETYPEID AND FROMSTATEID = _FROMSTATEID AND TOSTATEID = _TOSTATEID;

    ELSEIF(_MODE = 'DELETEBYRFPID') THEN
        UPDATE RFPTRANSACTION SET ACTIVE = 'I', UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE()
                  WHERE RFPID = _RFPID ;

    ELSEIF(_MODE = 'APPROVED') THEN
        UPDATE RFPTRANSACTION SET APPROVEDAMOUNT = _APPROVEDAMOUNT, ACTIVE = 'A', UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE()
              WHERE RFPID = _RFPID AND FROMLOCATION = _FROMLOCATION AND TOLOCATION = _TOLOCATION
                    AND VEHICLETYPEID = _VEHICLETYPEID AND FROMSTATEID = _FROMSTATEID AND TOSTATEID = _TOSTATEID;

    ELSEIF(_MODE = 'APIRATE') THEN
        UPDATE RFPTRANSACTION SET SHIPXRATE = _SHIPXRATE, CONTRACTRATE = _CONTRACTRATE, CLEANSHEETRATE = _CLEANSHEETRATE,
              PVSRFPRATE = _PVSRFPRATE, BACKHAULPERCENT = _BACKHAULPERCENT, ACTIVE = 'A', UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE()
          WHERE RFPID = _RFPID AND FROMLOCATION = _FROMLOCATION AND TOLOCATION = _TOLOCATION
                    AND VEHICLETYPEID = _VEHICLETYPEID AND FROMSTATEID = _FROMSTATEID AND TOSTATEID = _TOSTATEID;

    ELSEIF(_MODE = 'RFPRATE') THEN
      SET @LISTPVSRFPRATE = IFNULL((SELECT APPROVEDAMOUNT
           FROM RFPTRANSACTION WHERE FROMLOCATION = _FROMLOCATION AND TOLOCATION =_TOLOCATION
               AND VEHICLETYPEID = _VEHICLETYPEID AND FROMSTATEID = _FROMSTATEID AND TOSTATEID = _TOSTATEID
                      ORDER BY UPDATEDON DESC LIMIT 1),0);

      IF (@LISTPVSRFPRATE  IS NOT NULL) THEN
            UPDATE RFPTRANSACTION SET PVSRFPRATE = @LISTPVSRFPRATE , UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE()
                  WHERE RFPID = _RFPID AND FROMLOCATION = _FROMLOCATION AND TOLOCATION = _TOLOCATION
                      AND VEHICLETYPEID = _VEHICLETYPEID AND FROMSTATEID = _FROMSTATEID AND TOSTATEID = _TOSTATEID;
      END IF;

      SELECT @LISTPVSRFPRATE AS RESULT;

    ELSEIF(_MODE = 'BYRFPID') THEN
        SELECT RT.RFPID, RT.FROMLOCATION, RT.TOLOCATION, RT.VEHICLETYPEID, RT.SERVICETYPE,
            RT.CLEANSHEETRATE, RT.CONTRACTRATE, RT.SHIPXRATE,
            RT.PVSRFPRATE, RT.MARKETRATE, RT.BAQUOTE, RT.BACKHAULAVL, RT.BACKHAULPERCENT, RT.APPROVEDAMOUNT,
            RT.ACTIVE, FL.LOCATIONNAME AS FROMLOCATIONNAME, TL.LOCATIONNAME AS TOLOCATIONNAME,
            VT.VEHICLETYPENAME, RT.FROMSTATEID, RT.TOSTATEID, FS.STATENAME AS FROMSTATE, TS.STATENAME AS TOSTATE
        FROM RFPTRANSACTION RT
            INNER JOIN LOCATION FL ON FL.LOCATIONID = RD.FROMLOCATION
            INNER JOIN STATE FS ON FS.STATEID = RD.FROMSTATEID
            INNER JOIN LOCATION TL ON TL.LOCATIONID = RD.TOLOCATION
            INNER JOIN STATE TS ON TS.STATEID = RD.TOSTATEID
            INNER JOIN VEHICLETYPE VT ON VT.VEHICLETYPEID = RD.VEHICLETYPEID
        WHERE RT.RFPID = _RFPID;

   
    END IF;

END $$
/*!50003 SET SESSION SQL_MODE=@TEMP_SQL_MODE */  $$

DELIMITER ;

--
-- Definition of procedure `SP_MANAGESTATE`
--

DROP PROCEDURE IF EXISTS `SP_MANAGESTATE`;

DELIMITER $$

/*!50003 SET @TEMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_MANAGESTATE`(
IN _STATEID INT,
IN _STATECODE  VARCHAR(20),
IN _STATENAME  VARCHAR(100),
IN _ACTIVE CHAR(1),
IN _CREATEDBY INT,
IN _CREATEDON DATETIME,
IN _MODE VARCHAR(25))
BEGIN

    IF (_MODE = 'INSERT') THEN
        IF EXISTS(SELECT STATEID FROM STATE WHERE _STATEID > 0 AND STATEID = _STATEID) THEN
            UPDATE STATE SET STATECODE = _STATECODE, STATENAME = _STATENAME,
                ACTIVE = 'A', UPDATEDBY = _CREATEDBY,
                UPDATEDON = SYSDATE() WHERE STATEID = _STATEID;

        SELECT 'UPDATED SUCCESSFULLY' AS `RESULT`;
        ELSE
            INSERT INTO STATE(STATECODE, STATENAME, CREATEDBY)
              VALUES(_STATECODE, _STATENAME, _CREATEDBY);

        SELECT 'INSERTED SUCCESSFULLY' AS `RESULT`;
        END IF;

    ELSEIF(_MODE = 'DELETE') THEN
        UPDATE STATE SET ACTIVE = 'I', UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE() WHERE STATEID = _STATEID;

        SELECT 'DELETED SUCCESSFULLY' AS `RESULT`;

    ELSEIF(_MODE = 'BYSTATEID') THEN
        SELECT STATEID, STATECODE, STATENAME, ACTIVE FROM STATE WHERE STATEID = _STATEID;

    ELSEIF(_MODE = 'GETALL') THEN
        SELECT STATEID, STATECODE, STATENAME, ACTIVE FROM STATE WHERE ACTIVE = 'A';

    ELSEIF(_MODE = 'SEARCH') THEN
        SELECT STATEID, STATECODE, STATENAME, ACTIVE FROM STATE
          WHERE (STATENAME LIKE (CONCAT(_STATENAME,'%')) AND STATECODE LIKE (CONCAT(_STATECODE,'%')))
              AND ACTIVE = 'A';
    END IF;

END $$
/*!50003 SET SESSION SQL_MODE=@TEMP_SQL_MODE */  $$

DELIMITER ;

--
-- Definition of procedure `SP_MANAGEUSER`
--

DROP PROCEDURE IF EXISTS `SP_MANAGEUSER`;

DELIMITER $$

/*!50003 SET @TEMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_MANAGEUSER`(
IN _USERID    INT,
IN _USERCODE  VARCHAR(20),
IN _FIRSTNAME  VARCHAR(50),
IN _LASTNAME  VARCHAR(50),
IN _PASSWORD  VARCHAR(100),
IN _EMAILID  VARCHAR(255),
IN _ACTIVE CHAR(1),
IN _CREATEDBY INT,
IN _CREATEDON VARCHAR(20),
IN _MODE VARCHAR(25))
BEGIN

    IF (_MODE = 'INSERT') THEN
        IF EXISTS(SELECT USERID FROM `USER` WHERE _USERID > 0 AND USERID = _USERID) THEN
            UPDATE `USER` SET USERCODE = _USERCODE, FIRSTNAME = _FIRSTNAME, LASTNAME = _LASTNAME,
                `PASSWORD` = _PASSWORD, EMAILID = _EMAILID, ACTIVE = 'A', UPDATEDBY = _CREATEDBY,
                UPDATEDON = SYSDATE() WHERE USERID = _USERID;
        ELSE
            IF EXISTS(SELECT USERID FROM `USER` WHERE USERCODE = _USERCODE) THEN
              SELECT 'FAILED : User exists' AS RESULT;
            ELSE
              INSERT INTO `USER`(USERCODE, FIRSTNAME, LASTNAME, `PASSWORD`, EMAILID, CREATEDBY)
              VALUES(_USERCODE, _FIRSTNAME, _LASTNAME, _PASSWORD, _EMAILID, _CREATEDBY);
              SELECT 'SUCCESS' AS RESULT;
            END IF;
        END IF;
    ELSEIF(_MODE = 'DELETE') THEN
        UPDATE `USER` SET ACTIVE = 'I', UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE() WHERE USERID = _USERID;
    ELSEIF(_MODE = 'LOGIN') THEN
        IF EXISTS(SELECT USERID FROM `USER` WHERE USERCODE = _USERCODE AND `PASSWORD` = _PASSWORD) THEN
            SELECT 'SUCCESS' AS 'RESULT';
        ELSE
            SELECT 'Username and password mismatch' AS 'RESULT';
        END IF;
    ELSEIF(_MODE = 'BYUSERID') THEN
        SELECT USERID, USERCODE, FIRSTNAME, LASTNAME, CONCAT(FIRSTNAME,' ',LASTNAME) AS DISPLAYNAME,
          `PASSWORD`, EMAILID, ACTIVE FROM `USER` WHERE USERID = _USERID;
    ELSEIF(_MODE = 'GETALL') THEN
        SELECT USERID, USERCODE, FIRSTNAME, LASTNAME, CONCAT(FIRSTNAME,' ',LASTNAME) AS DISPLAYNAME,
          `PASSWORD`, EMAILID, ACTIVE FROM `USER` WHERE ACTIVE = 'A';
    ELSEIF(_MODE = 'SEARCH') THEN
        SELECT USERID, USERCODE, FIRSTNAME, LASTNAME, CONCAT(FIRSTNAME,' ',LASTNAME) AS DISPLAYNAME,
          `PASSWORD`, EMAILID, ACTIVE FROM `USER`
          WHERE (FIRSTNAME LIKE (CONCAT(_FIRSTNAME,'%')) AND LASTNAME LIKE (CONCAT('%', _LASTNAME,'%')))
              AND ACTIVE = 'A';
    END IF;

END $$
/*!50003 SET SESSION SQL_MODE=@TEMP_SQL_MODE */  $$

DELIMITER ;

--
-- Definition of procedure `SP_MANAGEUSERRFPHEADER`
--

DROP PROCEDURE IF EXISTS `SP_MANAGEUSERRFPHEADER`;

DELIMITER $$

/*!50003 SET @TEMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_MANAGEUSERRFPHEADER`(
IN _RFPID INT,
IN _USERID INT,
IN _CURRENTSTAGINGOWNER INT,
IN _RECENTDATE DATETIME,
IN _ACTIVE CHAR(1),
IN _CREATEDBY INT,
IN _CREATEDON DATETIME,
IN _MODE VARCHAR(25))
BEGIN

    IF (_MODE = 'INSERT') THEN
        IF EXISTS(SELECT RFPID FROM USERRFPHEADER WHERE RFPID = _RFPID AND USERID = _USERID
                  AND CURRENTSTAGINGOWNER = _CURRENTSTAGINGOWNER) THEN
            UPDATE USERRFPHEADER SET USERID = _USERID, CURRENTSTAGINGOWNER = _CURRENTSTAGINGOWNER,
                RECENTDATE = _RECENTDATE, ACTIVE = 'A', UPDATEDBY = _CREATEDBY,
                UPDATEDON = SYSDATE() WHERE RFPID = _RFPID AND USERID = _USERID
                  AND CURRENTSTAGINGOWNER = _CURRENTSTAGINGOWNER;
            SELECT 'UPDATED SUCCESSFULLY' AS `RESULT`;

        ELSE
            INSERT INTO USERRFPHEADER(RFPID, USERID, CURRENTSTAGINGOWNER, RECENTDATE, CREATEDBY)
              VALUES(_RFPID, _USERID, _CURRENTSTAGINGOWNER, SYSDATE(), _CREATEDBY);
            SELECT 'INSERTED SUCCESSFULLY' AS `RESULT`;
        END IF;

    ELSEIF(_MODE = 'DELETE') THEN
        UPDATE USERRFPHEADER SET ACTIVE = 'I', UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE()
            WHERE RFPID = _RFPID AND USERID = _USERID
                  AND CURRENTSTAGINGOWNER = _CURRENTSTAGINGOWNER;
            SELECT 'DELETED SUCCESSFULLY' AS `RESULT`;

    ELSEIF(_MODE = 'BYID') THEN
        SELECT USERID, CURRENTSTAGINGOWNER, RECENTDATE, ACTIVE FROM USERRFPHEADER
            WHERE RFPID = _RFPID AND USERID = _USERID
                  AND CURRENTSTAGINGOWNER = _CURRENTSTAGINGOWNER;

    ELSEIF(_MODE = 'GETALL') THEN
        SELECT USERID, CURRENTSTAGINGOWNER, RECENTDATE, ACTIVE FROM USERRFPHEADER WHERE ACTIVE = 'A';
    END IF;

END $$
/*!50003 SET SESSION SQL_MODE=@TEMP_SQL_MODE */  $$

DELIMITER ;

--
-- Definition of procedure `SP_MANAGEVEHICLETYPE`
--

DROP PROCEDURE IF EXISTS `SP_MANAGEVEHICLETYPE`;

DELIMITER $$

/*!50003 SET @TEMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_MANAGEVEHICLETYPE`(
IN _VEHICLETYPEID INT,
IN _VEHICLETYPECODE  VARCHAR(30),
IN _VEHICLETYPENAME  VARCHAR(50),
IN _ACTIVE CHAR(1),
IN _CREATEDBY INT,
IN _CREATEDON DATETIME,
IN _MODE VARCHAR(25))
BEGIN

    IF (_MODE = 'INSERT') THEN
        IF EXISTS(SELECT VEHICLETYPEID FROM VEHICLETYPE WHERE _VEHICLETYPEID > 0 AND VEHICLETYPEID = _VEHICLETYPEID) THEN
            UPDATE VEHICLETYPE SET VEHICLETYPECODE = _VEHICLETYPECODE, VEHICLETYPENAME = _VEHICLETYPENAME,
                ACTIVE = 'A', UPDATEDBY = _CREATEDBY,
                UPDATEDON = SYSDATE() WHERE VEHICLETYPEID = _VEHICLETYPEID;
            SELECT 'SUCCESS' AS RESULT;
        ELSE
            IF EXISTS(SELECT VEHICLETYPEID FROM VEHICLETYPE WHERE (VEHICLETYPECODE = _VEHICLETYPECODE OR VEHICLETYPENAME = _VEHICLETYPENAME)) THEN
              SELECT 'FAILED : Vehicle type exists' AS RESULT;
            ELSE
              INSERT INTO VEHICLETYPE(VEHICLETYPECODE, VEHICLETYPENAME, VEHICLEVOLUME, CREATEDBY)
                  VALUES(_VEHICLETYPECODE, _VEHICLETYPENAME, _CREATEDBY);
              SELECT 'SUCCESS' AS RESULT;
            END IF;
        END IF;

    ELSEIF(_MODE = 'DELETE') THEN
        UPDATE VEHICLETYPE SET ACTIVE = 'I', UPDATEDBY = _CREATEDBY, UPDATEDON = SYSDATE()
            WHERE VEHICLETYPEID = _VEHICLETYPEID;
        SELECT 'SUCCESS' AS RESULT;
    ELSEIF(_MODE = 'BYVEHICLETYPEID') THEN
        SELECT VEHICLETYPEID, VEHICLETYPECODE, VEHICLETYPENAME, ACTIVE
            FROM VEHICLETYPE WHERE VEHICLETYPEID = _VEHICLETYPEID;

    ELSEIF(_MODE = 'GETALL') THEN
        SELECT VEHICLETYPEID, VEHICLETYPECODE, VEHICLETYPENAME, ACTIVE FROM VEHICLETYPE WHERE ACTIVE = 'A';

    ELSEIF(_MODE = 'SEARCH') THEN
        SELECT VEHICLETYPEID, VEHICLETYPECODE, VEHICLETYPENAME, ACTIVE FROM VEHICLETYPE
          WHERE (VEHICLETYPENAME LIKE (CONCAT(_VEHICLETYPENAME,'%')) AND VEHICLETYPECODE LIKE (CONCAT(_VEHICLETYPECODE,'%')))
              AND ACTIVE = 'A';
    END IF;

END $$
/*!50003 SET SESSION SQL_MODE=@TEMP_SQL_MODE */  $$

DELIMITER ;



/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
